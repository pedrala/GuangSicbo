{"remainingRequest":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/babel-loader/lib/index.js!/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/components/sicbo/BetState.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/components/sicbo/BetState.vue","mtime":1567760082000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\r\n * 칩의 위치를 램덤하게 발생시킨다.\r\n */\nfunction getRandomIntInclusive(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default {\n  props: {\n    mode: {\n      // pc | mobile\n      type: String,\n      default: 'pc'\n    },\n    amount: {\n      // 배팅된 TAZ Chip 수량\n      type: Number,\n      default: 1\n    },\n    chipSize: {\n      type: String,\n      // 칩 크기\n      default: '80px'\n    },\n    chipselected: {\n      // false 일때 취소 UI를 활성화\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    /**\r\n     * 배팅 금액 표시 UI의 css class\r\n     */\n    classTop: function classTop() {\n      return this.mode === 'pc' ? 'top' : 'top-mobile';\n    },\n\n    /**\r\n     * 배팅 금액의 css class\r\n     */\n    classAmount: function classAmount() {\n      return this.mode === 'pc' ? 'amount' : 'amount-mobile';\n    },\n\n    /**\r\n     * 배팅이 있는지 판다.\r\n     */\n    isShow: function isShow() {\n      return this.amount > 0;\n    },\n\n    /**\r\n     * 배팅 금액에 따른 칩의 종류와 갯수를 계산\r\n     */\n    chips: function chips() {\n      if (this.amount <= 0) return [];\n      var CHIPS = [10000100, 5000000, 1000000, 500000, 100000, 50000, 10000, 5000, 1000, 100];\n      var chips = [];\n\n      for (var idx = 1; idx < CHIPS.length; idx++) {\n        chips.push(Math.floor(this.amount % CHIPS[idx - 1] / CHIPS[idx]));\n      }\n\n      var minValueIdx = chips.length - 1;\n      var minCoin = {};\n      var result = [];\n\n      for (var _idx = chips.length - 1; _idx >= 0; _idx--) {\n        if (chips[_idx] > 0) {\n          minValueIdx = _idx;\n          minCoin.img = \"/img/sicbo/gamechip/chip_0\".concat(8 - _idx, \"_shadow.png\");\n          minCoin.x = getRandomIntInclusive(45, 55);\n          minCoin.y = getRandomIntInclusive(45, 55);\n          break;\n        }\n      }\n\n      for (var _idx2 = 0; _idx2 < chips.length; _idx2++) {\n        if (result.length >= 5) break;\n        var eol = _idx2 === minValueIdx ? chips[_idx2] - 1 : chips[_idx2];\n\n        for (var jdx = 0; jdx < eol; jdx++) {\n          result.unshift({\n            img: \"/img/sicbo/gamechip/chip_0\".concat(8 - _idx2, \"_shadow.png\"),\n            x: getRandomIntInclusive(45, 55),\n            y: getRandomIntInclusive(45, 55)\n          });\n          if (result.length >= 5) break;\n        }\n      }\n\n      result.unshift(minCoin);\n      return result.reverse();\n    }\n  }\n};",{"version":3,"sources":["BetState.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"flex flex-center flex-middle\" v-if=\"isShow\">\r\n    <div :class=\"classTop\">\r\n      <div :class=\"classAmount\">\r\n        <div class=\"flex-wfill\">{{amount}}</div>\r\n        <img src=\"/img/sicbo/btn-cancle.png\" v-if=\"!chipselected\"/>\r\n      </div>\r\n    </div>\r\n    <img v-for=\"chip in chips\" :src=\"chip.img\" :width=\"chipSize\" :style=\"`position: absolute; top: ${chip.y}%; left: ${chip.x}%; transform: translateX(-50%)`\" :key=\"chip.id\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n/**\r\n * 칩의 위치를 램덤하게 발생시킨다.\r\n */\r\nfunction getRandomIntInclusive(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport default {\r\n  props: {\r\n    mode: { // pc | mobile\r\n      type: String,\r\n      default: 'pc'\r\n    },\r\n    amount: {  // 배팅된 TAZ Chip 수량\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    chipSize: {\r\n      type: String, // 칩 크기\r\n      default: '80px'\r\n    },\r\n    chipselected: { // false 일때 취소 UI를 활성화\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  computed: {\r\n    /**\r\n     * 배팅 금액 표시 UI의 css class\r\n     */\r\n    classTop() {\r\n      return (this.mode === 'pc') ? 'top' : 'top-mobile';\r\n    },\r\n    /**\r\n     * 배팅 금액의 css class\r\n     */\r\n    classAmount() {\r\n      return (this.mode === 'pc') ? 'amount' : 'amount-mobile';\r\n    },\r\n    /**\r\n     * 배팅이 있는지 판다.\r\n     */\r\n    isShow() {\r\n      return this.amount > 0;\r\n    },\r\n    /**\r\n     * 배팅 금액에 따른 칩의 종류와 갯수를 계산\r\n     */\r\n    chips() {\r\n      if (this.amount <= 0) return [];\r\n      const CHIPS = [10000100, 5000000, 1000000, 500000, 100000, 50000, 10000, 5000, 1000, 100];\r\n      const chips = [];\r\n      for (let idx = 1; idx < CHIPS.length; idx++) {\r\n        chips.push(Math.floor((this.amount % CHIPS[idx - 1]) / CHIPS[idx]));\r\n      }\r\n      let minValueIdx = chips.length - 1;\r\n      const minCoin = {};\r\n      const result = [];\r\n      for (let idx = chips.length - 1; idx >= 0 ; idx--) {\r\n        if (chips[idx] > 0) {\r\n          minValueIdx = idx;\r\n          minCoin.img = `/img/sicbo/gamechip/chip_0${8 - idx}_shadow.png`;\r\n          minCoin.x = getRandomIntInclusive(45, 55);\r\n          minCoin.y = getRandomIntInclusive(45, 55);\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (let idx = 0; idx < chips.length ; idx++) {\r\n        if (result.length >= 5) break;\r\n        const eol = (idx === minValueIdx) ? chips[idx] - 1 : chips[idx];\r\n        for (let jdx = 0; jdx < eol; jdx++) {\r\n          result.unshift({\r\n            img: `/img/sicbo/gamechip/chip_0${8 - idx}_shadow.png`,\r\n            x: getRandomIntInclusive(45, 55),\r\n            y: getRandomIntInclusive(45, 55)\r\n          });\r\n          if (result.length >= 5) break;\r\n        }\r\n      }\r\n\r\n      result.unshift(minCoin);\r\n      \r\n      return result.reverse();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../scss/flex.scss';\r\n\r\n.top {\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 36px;\r\n  padding-top: 4px;\r\n}\r\n\r\n.top-mobile {\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 28px;\r\n}\r\n\r\n.amount {\r\n  @extend .flex;\r\n  @extend .flex-middle;\r\n  justify-content: space-between!important;\r\n  height: 100%;\r\n  width: 96%;\r\n  padding: 4px 8px;\r\n  text-align: center;\r\n  color: #FFFFFF;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-shadow: 0px 0px 4px rgba(255, 244, 144, 0.6);\r\n  background: rgba(0, 0, 0, 0.8);\r\n  border-radius: 3px;\r\n}\r\n\r\n.amount-mobile {\r\n  @extend .flex;\r\n  @extend .flex-middle;\r\n  justify-content: space-between!important;\r\n  height: 100%;\r\n  width: 96%;\r\n  padding: 2px 4px;\r\n  text-align: center;\r\n  color: #FFFFFF;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  text-shadow: 0px 0px 4px rgba(255, 244, 144, 0.6);\r\n  background: rgba(0, 0, 0, 0.8);\r\n  border-radius: 3px;\r\n  img {\r\n    width: 20px;\r\n  }\r\n}\r\n</style>"],"sourceRoot":"src/components/sicbo"}]}