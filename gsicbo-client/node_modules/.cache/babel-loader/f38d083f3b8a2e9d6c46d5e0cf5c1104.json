{"remainingRequest":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/babel-loader/lib/index.js!/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/eslint-loader/index.js??ref--13-0!/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/store.js","dependencies":[{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/store.js","mtime":1567760084000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar common = {\n  state: {\n    drawerMode: 'over-short',\n    // static | over-tall | over-short\n    drawerState: 'open',\n    // open | close | close-without-ani\n    appbarMode: 'pc',\n    // pc | mobile\n    account: {},\n    // Scatter에 로그인된 계정 정보\n    balance: {\n      // 각 토큰별 잔고\n      eos: 0,\n      taz: 0,\n      tazchip: 0\n    },\n    userData: {\n      // Offchaion 서버에서 수신한 사용자 정보\n      account: '',\n      vip: 0,\n      accumulated_bet: 0,\n      accumulated_prize: 0,\n      staked: 0,\n      unstaking: 0,\n      unstaking_requested: 0,\n      created: '',\n      updated: '',\n      signup_reward: 0\n    }\n  },\n  mutations: {\n    setDrawerMode: function setDrawerMode(state, val) {\n      state.drawerMode = val;\n    },\n    setDrawerState: function setDrawerState(state, val) {\n      state.drawerState = val;\n    },\n    setAppbarMode: function setAppbarMode(state, val) {\n      state.appbarMode = val;\n    },\n    setAccount: function setAccount(state, account) {\n      state.account = account;\n    },\n    setEosBalance: function setEosBalance(state, balance) {\n      state.balance.eos = balance;\n    },\n    setTazBalance: function setTazBalance(state, balance) {\n      state.balance.taz = balance;\n    },\n    setTazchipBalance: function setTazchipBalance(state, balance) {\n      state.balance.tazchip = balance;\n    },\n    setUserData: function setUserData(state, userData) {\n      state.userData = userData;\n    }\n  },\n  actions: {\n    toggleDrawer: function toggleDrawer(_ref) {\n      var commit = _ref.commit,\n          state = _ref.state;\n\n      if (state.drawerMode === 'static') {\n        commit('setDrawerState', 'open');\n      } else {\n        if (state.drawerState === 'open') {\n          commit('setDrawerState', 'close');\n        } else {\n          commit('setDrawerState', 'open');\n        }\n      }\n    },\n    closeDrawer: function closeDrawer(_ref2, useAnimation) {\n      var commit = _ref2.commit,\n          state = _ref2.state;\n\n      if (state.drawerState === 'open') {\n        if (useAnimation) {\n          commit('setDrawerState', 'close');\n        } else {\n          commit('setDrawerState', 'close-without-ani');\n        }\n      }\n    }\n  }\n};\nvar sicbo = {\n  state: {\n    ui: 'pc'\n  },\n  mutations: {\n    setMode: function setMode(state, val) {\n      state.ui = val;\n    }\n  },\n  actions: {}\n};\nexport default new Vuex.Store({\n  modules: {\n    common: common,\n    sicbo: sicbo\n  }\n});",{"version":3,"sources":["/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/store.js"],"names":["Vue","Vuex","use","common","state","drawerMode","drawerState","appbarMode","account","balance","eos","taz","tazchip","userData","vip","accumulated_bet","accumulated_prize","staked","unstaking","unstaking_requested","created","updated","signup_reward","mutations","setDrawerMode","val","setDrawerState","setAppbarMode","setAccount","setEosBalance","setTazBalance","setTazchipBalance","setUserData","actions","toggleDrawer","commit","closeDrawer","useAnimation","sicbo","ui","setMode","Store","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst common = {\r\n  state: {\r\n    drawerMode: 'over-short', // static | over-tall | over-short\r\n    drawerState: 'open',     // open | close | close-without-ani\r\n    appbarMode: 'pc',        // pc | mobile\r\n    account: {},             // Scatter에 로그인된 계정 정보\r\n    balance: {               // 각 토큰별 잔고\r\n      eos: 0,\r\n      taz: 0,\r\n      tazchip: 0\r\n    },\r\n    userData: {               // Offchaion 서버에서 수신한 사용자 정보\r\n      account: '',\r\n      vip: 0,\r\n      accumulated_bet: 0,\r\n      accumulated_prize: 0,\r\n      staked: 0,\r\n      unstaking: 0,\r\n      unstaking_requested: 0,\r\n      created: '',\r\n      updated: '',\r\n      signup_reward: 0\r\n    }\r\n  },\r\n  mutations: {\r\n    setDrawerMode(state, val) {\r\n      state.drawerMode = val;\r\n    },\r\n    setDrawerState(state, val) {\r\n      state.drawerState = val;\r\n    },\r\n    setAppbarMode(state, val) {\r\n      state.appbarMode = val;\r\n    },\r\n    setAccount(state, account) {\r\n      state.account = account;\r\n    },\r\n    setEosBalance(state, balance) {\r\n      state.balance.eos = balance;\r\n    },\r\n    setTazBalance(state, balance) {\r\n      state.balance.taz = balance;\r\n    },\r\n    setTazchipBalance(state, balance) {\r\n      state.balance.tazchip = balance;\r\n    },\r\n    setUserData(state, userData) {\r\n      state.userData = userData;\r\n    }\r\n  },\r\n  actions: {\r\n    toggleDrawer({ commit, state }) {\r\n      if (state.drawerMode === 'static') {\r\n        commit('setDrawerState', 'open');\r\n      } else {\r\n        if (state.drawerState === 'open') {\r\n          commit('setDrawerState', 'close');\r\n        } else {\r\n          commit('setDrawerState', 'open');\r\n        }\r\n      }\r\n    },\r\n    closeDrawer({ commit, state }, useAnimation) {\r\n      if (state.drawerState === 'open') {\r\n        if (useAnimation) {\r\n          commit('setDrawerState', 'close');\r\n        } else {\r\n          commit('setDrawerState', 'close-without-ani');\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst sicbo = {\r\n  state: {\r\n    ui: 'pc'\r\n  },\r\n  mutations: {\r\n    setMode(state, val) {\r\n      state.ui = val;\r\n    }\r\n  },\r\n  actions: {\r\n\r\n  }\r\n}\r\n\r\nexport default new Vuex.Store({\r\n  modules: {\r\n    common,\r\n    sicbo\r\n  }\r\n})\r\n"]}]}