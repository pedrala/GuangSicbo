{"remainingRequest":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/views/Sicbo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/src/views/Sicbo.vue","mtime":1573647764222},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/crazycapital/Downloads/GuangGame/gsicboDeliver201909302/sources_20190930/gsicbo-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState, mapMutations, mapActions } from 'vuex';\r\nimport { setTimeout, setInterval, clearInterval, clearTimeout } from 'timers';\r\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\r\nimport { flatMap, timeout, tap } from 'rxjs/operators';\r\nimport resize from 'vue-resize-directive';\r\nimport PcGameTable from '../components/sicbo/PcGameTable.vue';\r\nimport MobileGameTable from '../components/sicbo/MobileGameTable.vue';\r\nimport Footer from '../components/Footer.vue';\r\nimport HistoryDetail from '../components/sicbo/HistoryDetail.vue';\r\nimport convToBase62 from '../js/base62.js';\r\nimport {\r\n  // const\r\n  DEFAULT_WIDTH,\r\n  DEFAULT_HEIGHT,\r\n  ASPECT_RATIO,\r\n  CHIP_TBL_HEIGHT,\r\n  SICBO_MOBILE_WIDTH,\r\n  SICBO_MOBILE_HEIGHT,\r\n  BET_TIMER,\r\n  CAST_CHIP_SIZE,\r\n  CAST_CHIP_MOBILE_SIZE,\r\n  CHIP_PRICE,\r\n  APPROVAL_WAITING_TIME,\r\n\r\n  // Animaiton timmer\r\n  DELAY_CAST_CARD1,\r\n  DELAY_CAST_CARD2,\r\n  DELAY_CLOSE_TONG,\r\n  DELAY_STARTING_ANI,\r\n  DELAY_RESET_GAME,\r\n\r\n  // function\r\n  getPositions,\r\n  isPair,\r\n  isSmall,\r\n  isOdd,\r\n  isGuang\r\n} from '../js/sicbo.js';\r\nimport data from '../js/sicbo-data.js'\r\n\r\nexport default {\r\n\r\n  data,\r\n  props: {\r\n    isLangChanged: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  created() {\r\n\r\n    window.onscroll = () => {  // 브라우저의 스크롤 이벤트 리스너 등록\r\n      if (this.isMobile) {\r\n        this.onScrolled();\r\n      }\r\n    };\r\n\r\n    for (let i = 0; i < 26; i++) { // 배팅 데이터를 초기화\r\n      this.bets.push({id: i, amount: 0});\r\n    }\r\n\r\n    this.$ws.connectToPublicChannel(); // Websocket의 퍼블릭 채널에 연결\r\n    this.$ws.publicChannel.on('game-result', (data) => {  // 게임 결과 수신 리스너\r\n      if (this.account.name === data.game.uid) { // 유저 게임\r\n        if (this.game.id === data.game.gid) { // 현재 게임\r\n          const now = new Date().getTime();\r\n          \r\n          if ((now - this.beted) < 3000) {\r\n            setTimeout(() => {\r\n              this.revealed(data);\r\n            }, 3000 - (now - this.beted));        \r\n          } else {\r\n            this.revealed(data);\r\n          }\r\n        } else {\r\n          this.pushBetHistory(data, 'myBets');\r\n          this.pushBetHistory(data, 'allBets');\r\n        }\r\n      } else {\r\n        this.pushBetHistory(data, 'allBets');\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * 종료시 각종 핸드러를 초기화 한다.\r\n   */\r\n  destroyed() {\r\n    if (this.handleStartingAni) {\r\n      clearTimeout(this.handleStartingAni);\r\n    }\r\n    if (this.handleBetTimer) {\r\n      clearInterval(this.handleBetTimer);\r\n    }\r\n    if (this.handleRevealAni) {\r\n      clearTimeout(this.handleRevealAni);\r\n    }\r\n    window.onscroll = () => {}; // 브라우져 스크롤 이벤트 리스너 제거\r\n  },\r\n\r\n  /**\r\n   * 초기화\r\n   */\r\n  mounted() {\r\n    this.fetchHistoryData();  // 히스토리 데이터를 요청\r\n\r\n    this.$eventBus.$on('resize', () => this.onResize());  // resize 이벤트 리스너 등록\r\n    this.onResize();\r\n\r\n    // ui 상태 초기화\r\n    if (window.innerWidth < SICBO_MOBILE_WIDTH || window.innerHeight < SICBO_MOBILE_HEIGHT) {\r\n      this.setAppbarMode('mobile');\r\n    } else {\r\n      this.setAppbarMode('pc');\r\n    }\r\n    this.setDrawerMode('overlap');\r\n    this.setDrawerState('close-without-ani');\r\n\r\n    if (this.isLogin) {\r\n      this.startGame()\r\n    } else {\r\n      this.$eventBus.$on('login', () => this.startGame());\r\n    }\r\n\r\n    // this.$eventBus.$on('logout', () => this.stopGame());\r\n    if (!this.isLogin) {\r\n      this.setStatus('logout');\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      /**\r\n       * 게임 테이블이 보바일 모드인지 판단\r\n       */\r\n      isMobile(state) {\r\n        return state.common.appbarMode !== 'pc';\r\n      },\r\n      /**\r\n       * 로그인 상태인지 판단\r\n       */\r\n      isLogin(state) {\r\n        return state.common.account.name !== undefined;\r\n      },\r\n\r\n      /**\r\n       * Scatter에 로그인한 계정 정보\r\n       */\r\n      account(state) {\r\n        return state.common.account;\r\n      },\r\n\r\n      /**\r\n       * 로그인 된 사용자의 TAZ Chip 잔고\r\n       */\r\n      tazchipBalance(state) {\r\n        return state.common.balance.tazchip;\r\n      },\r\n\r\n      appbarHeight(state) {\r\n        return state.common.appbarMode !== 'pc' ? 68 : 60;\r\n      },\r\n    }),\r\n\r\n    /**\r\n     * 모바일 화면의 칩 swiper 폭\r\n     */\r\n    mobileChipSwiperWidth() {\r\n      return window.innerWidth - 36;\r\n    },\r\n\r\n    /**\r\n     * 모바일 화면의 칩 UI를 화면 스크롤에 따라 제어\r\n     */\r\n    styleMobileChipTable() {\r\n      if (this.chipTableMobile.position === 'fixed') {\r\n        return `position:fixed;height:${this.chipTableMobile.height}px;top:${window.innerHeight - this.chipTableMobile.height}px`\r\n      }\r\n      \r\n      return `position:absolute;height:${this.chipTableMobile.height}px;`\r\n    },\r\n\r\n    /**\r\n     * 모바일 화면에서 배팅 버튼의 위치를 제어\r\n     */\r\n    classBtnBetMobile() {\r\n      if (this.chipTableMobile.position === 'fixed') {\r\n        return 'fixed';\r\n      }\r\n      return '';\r\n    },\r\n\r\n    /**\r\n     * swiper를 제어하기 위한 객체를 반환\r\n     */\r\n    chipSwiper() {\r\n      return this.$refs.chipSwiper.swiper;\r\n    },\r\n\r\n    /**\r\n     * 총 배팅 액\r\n     */\r\n    totalBetAmount() {\r\n      const total = this.bets.reduce((total, bet) => total + bet.amount, 0);\r\n      return total;\r\n    },\r\n\r\n    rotateKrZh() {\r\n      const langchanged = this.isLangChanged;\r\n      const curLang = localStorage.getItem('GuangGame.Language')||langchanged;\r\n      \r\n      if(curLang === 'ko' || curLang === 'zh'){\r\n        return true;\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    },\r\n\r\n    extendTrBet() {\r\n      const langchanged = this.isLangChanged;\r\n      const curLang = localStorage.getItem('GuangGame.Language')||langchanged;\r\n      \r\n      if(curLang === 'tr') {\r\n        return true;\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n\r\n    isMyBetEmpty() {\r\n      return this.myBets.length > 0 ? false : true;\r\n    }\r\n\r\n  },\r\n\r\n  watch: {\r\n    isLogin: function (val) { // 로그인 상태가 변경되면 히스토리 데이터를 업데이트 한다.\r\n      this.fetchHistoryData();\r\n      if (!val) {\r\n        if (this.handleStartingAni) {\r\n          clearTimeout(this.handleStartingAni);\r\n        }\r\n        if (this.handleBetTimer) {\r\n          clearInterval(this.handleBetTimer);\r\n        }\r\n        if (this.handleRevealAni) {\r\n          clearTimeout(this.handleRevealAni);\r\n        }\r\n        this.aniPopup.show = false;\r\n        this.aniPopup.startToPlaceBet = false;\r\n        this.aniPopup.waitResult.show = false;\r\n        this.aniPopup.result.show = false;\r\n        this.myBets = [];\r\n        this.stopGame();\r\n        this.setStatus('logout');\r\n        this.lastResult.cards = [-1, -1]\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 게임 화면 크기 변경\r\n     */\r\n    onResize() {\r\n      if (!this.isMobile) {\r\n        let tableWidth = window.innerWidth;\r\n        const tableHeight = window.innerHeight - this.appbarHeight - (CHIP_TBL_HEIGHT + 10);\r\n\r\n        if ((tableWidth / tableHeight) < ASPECT_RATIO) {\r\n          this.gameTable.width = Math.round(tableWidth);\r\n          this.gameTable.height = Math.round(tableWidth * DEFAULT_HEIGHT / DEFAULT_WIDTH);\r\n        } else {\r\n          this.gameTable.height = Math.round(tableHeight);\r\n          this.gameTable.width = Math.round(tableHeight * DEFAULT_WIDTH / DEFAULT_HEIGHT);\r\n        }\r\n      } else {\r\n        this.onScrolled();\r\n      }\r\n      this.canDisplayBetHistory();\r\n    },\r\n    \r\n    /**\r\n     * 모바일 모드에서 화면 스크롤 상태에 따라 칩 UI의 위치 변경\r\n     */\r\n    onScrolled() {\r\n      if (window.innerHeight + 300 > this.$refs.layout.getBoundingClientRect().bottom) {\r\n        this.chipTableMobile.position = 'absolute';\r\n      } else {\r\n        this.chipTableMobile.position = 'fixed';\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 게임 시작\r\n     */\r\n    startGame() {\r\n      this.aniPopup.show = true;\r\n      this.setStatus('new_game');\r\n      \r\n      this.cast1stCard();\r\n\r\n      this.handleStartingAni = setTimeout(() => this.cast2ndCard(), DELAY_CAST_CARD1);\r\n    },\r\n\r\n    /**\r\n     * Game table wrappers\r\n     */\r\n    setStatus(status) {\r\n      this.state = status;\r\n      this.$refs.gameTablePc.setStatus(status);\r\n    },\r\n\r\n    /**\r\n     * 첫 번째 화투 투척 애니메이션\r\n     */\r\n    cast1stCard() {\r\n      this.$refs.gameTablePc.cast1stCard();\r\n      this.$refs.gameTableMobile.cast1stCard();\r\n      \r\n      setTimeout(() => {\r\n        this.playSoundEffect('spread-card');\r\n      }, 200);\r\n    },\r\n\r\n    /**\r\n     * 두 번째 화투 투척 애니메이션\r\n     */\r\n    cast2ndCard() {\r\n      this.$refs.gameTablePc.cast2ndCard();\r\n      this.$refs.gameTableMobile.cast2ndCard();\r\n      setTimeout(() => {\r\n        this.playSoundEffect('spread-card');\r\n      }, 200);\r\n\r\n      this.handleStartingAni = setTimeout(() => {\r\n        this.closeTong();\r\n      }, DELAY_CAST_CARD2);\r\n    },\r\n\r\n    /**\r\n     * 식보통 덮는 애니메이션\r\n     */\r\n    closeTong() {\r\n      this.$refs.gameTablePc.closeTong();\r\n      this.$refs.gameTableMobile.closeTong();\r\n      setTimeout(() => {\r\n        this.playSoundEffect('close-tong')\r\n      }, 500);\r\n\r\n      this.handleStartingAni = setTimeout(() => {\r\n        this.startToPlaceBet();\r\n      }, DELAY_CLOSE_TONG);\r\n    },\r\n\r\n    /**\r\n     * 배팅 시작\r\n     */\r\n    startToPlaceBet() {\r\n      this.playSoundEffect('popup');\r\n      this.aniPopup.show = true;\r\n      this.aniPopup.startToPlaceBet = true;\r\n\r\n      this.handleStartingAni = setTimeout(() => {\r\n        this.aniPopup.show = false;\r\n        this.aniPopup.startToPlaceBet = false;\r\n\r\n        if (!this.isLogin) {\r\n          return;\r\n        }\r\n\r\n        this.setTimerString(this.betTimer);\r\n        this.setStatus('placing_bet');\r\n\r\n        this.handleBetTimer = setInterval(() => {\r\n          if (this.betTimer <= 1) {\r\n            this.aniPopup.show = true;\r\n            this.restartGame();\r\n          } else {\r\n            if (this.betTimer <= 11) {\r\n              this.playSoundEffect('timer2');  \r\n            } else {\r\n              this.playSoundEffect('timer1');\r\n            }\r\n            \r\n            this.betTimer = this.betTimer - 1;\r\n            this.setTimerString(this.betTimer);\r\n          }\r\n        }, 1000); // 배팅 대기 시간 타이머\r\n      }, DELAY_STARTING_ANI);\r\n    },\r\n\r\n    /**\r\n     * 게임을 재시작 한다.\r\n     */\r\n    restartGame() {\r\n      this.setStatus('new_game');\r\n      if (this.handleBetTimer) {\r\n        clearInterval(this.handleBetTimer);\r\n        this.handleBetTimer = undefined;\r\n      }\r\n\r\n      this.setTimerString(-1);\r\n\r\n      this.openTong();\r\n      this.playSoundEffect('close-tong');\r\n\r\n      setTimeout(() => this.initGame(), DELAY_RESET_GAME);\r\n      \r\n      this.handleStartingAni = setTimeout(() => { // 새 게임 시작\r\n        this.betTimer = BET_TIMER;\r\n        this.startGame();\r\n      }, 3000);\r\n    },\r\n\r\n    /**\r\n     * 식보통을 여는 애니메이션\r\n     */\r\n    openTong() {\r\n      this.$refs.gameTablePc.openTong();\r\n      this.$refs.gameTableMobile.openTong();\r\n    },\r\n\r\n    /**\r\n     * 게임이 종료되었을 때 배팅 정보등을 초기화\r\n     */\r\n    initGame() {\r\n      for (let idx = 0; idx < this.bets.length; idx++) {\r\n        this.bets[idx].amount = 0;\r\n      }\r\n\r\n      this.playSoundEffect('clear');\r\n      \r\n      this.betCounter = 0;\r\n      this.setTimerString(-1);\r\n      this.selectedChip = -1;\r\n\r\n      for (let idx = 0; idx < this.styleChip.length; idx++) {\r\n        this.chipImage[idx] = `/img/sicbo/gamechip/chip_0${idx}.png`;\r\n        this.styleChip[idx] = \"chip\";\r\n        this.styleChipMobile[idx] = \"chip-mobile\";\r\n      }\r\n\r\n      this.$refs.gameTablePc.stopGame();\r\n      this.$refs.gameTableMobile.stopGame();\r\n    },\r\n\r\n    /**\r\n     * 게임 종료\r\n     */\r\n    stopGame() {\r\n      if (this.handleStartingAni) {\r\n        clearTimeout(this.handleStartingAni);\r\n      }\r\n      \r\n      if (this.handleBetTimer) {\r\n        clearInterval(this.handleBetTimer);\r\n        this.handleBetTimer = undefined;\r\n      }\r\n\r\n      this.initGame();\r\n    },\r\n\r\n    /**\r\n     * 남은 배팅 시간을 출력\r\n     */\r\n    setTimerString(betTimer) {\r\n      let timerString = `--:--`;\r\n      if (betTimer >= 0) {\r\n        const sec = (betTimer % 60 < 10) ? `0${betTimer % 60}` : `${betTimer % 60}`\r\n        timerString = `${Math.floor(betTimer / 60)}:${sec}`;\r\n      }\r\n\r\n      this.$refs.gameTablePc.setTimerString(timerString);\r\n      this.timerString = timerString;\r\n    },\r\n\r\n    /**\r\n     * 칩을 왼쪽으로 스크롤 \r\n     */\r\n    slidePrevChip() {\r\n      this.chipSwiper.slidePrev();\r\n    },\r\n\r\n    /**\r\n     * 칩을 오른쪽으로 스크롤\r\n     */\r\n    slideNextChip() {\r\n      this.chipSwiper.slideNext();\r\n    },\r\n\r\n    /**\r\n     * 칩 선택\r\n     */\r\n    selectChip(idx) {\r\n      if (!this.isiOS()) {\r\n        this.playSoundEffect('bet');\r\n      }\r\n      for (let i = 0; i < 9; i++) {\r\n        if (i != idx) {\r\n          this.chipImage[i] = `/img/sicbo/gamechip/chip_0${i}.png`;\r\n          this.styleChip[i] = 'chip';\r\n          this.styleChipMobile[i] = 'chip-mobile';\r\n        } else if (this.styleChip[i] === 'chip') {\r\n          this.selectedChip = i;\r\n          this.chipImage[i] = `/img/sicbo/gamechip/chip_0${i}_light.png`;\r\n          this.styleChip[i] = 'chip selected'\r\n          this.styleChipMobile[i] = 'chip-mobile selected';\r\n        } else {\r\n          this.chipImage[i] = `/img/sicbo/gamechip/chip_0${i}.png`;\r\n          this.selectedChip = -1;\r\n          this.styleChip[i] = 'chip'\r\n          this.styleChipMobile[i] = 'chip-mobile';\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * REST 서버에 새 게임 생성을 요청한다.\r\n     */\r\n    confirmBet() {\r\n      if (!this.isLogin) {\r\n        return;\r\n      }\r\n\r\n      if (this.state !== 'placing_bet') {\r\n        return;\r\n      }\r\n\r\n      // 베팅 유효성 검사\r\n      if (this.betCounter < 1) {\r\n        this.showToast('nochip')\r\n        return;\r\n      }\r\n\r\n      // 배팅 타이머를 종료한다.\r\n      if (this.handleBetTimer) {\r\n        clearInterval(this.handleBetTimer);\r\n        this.handleBetTimer = undefined;\r\n      }\r\n      this.betTimer = -1;\r\n      this.setTimerString(-1);\r\n      this.setStatus('wait_result');\r\n\r\n      this.aniPopup.show = true; // 사용자의 입력을 차단한다.\r\n\r\n      // 서버에 게임 정보 요청\r\n      fetch(`${this.$REST_API_SERVER}/api/v1/games`, {\r\n        \"method\": \"POST\",\r\n        \"headers\": {\r\n          \"content-type\": \"application/json\"\r\n        },\r\n        \"body\": JSON.stringify({\"account\": this.account.name})\r\n      })\r\n      .then(response => {\r\n        response.json().then(gameInfo => {\r\n          this.game = gameInfo;\r\n          this.sendBetTransaction();\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 배팅된 내용을 블록체인에 전송한다.\r\n     */\r\n    sendBetTransaction() {debugger\r\n      const bets = [];\r\n      let totalAmount = 0;\r\n      for (let i = 0; i < this.bets.length; i++) {\r\n        if (this.bets[i].amount > 0) {\r\n          const position = convToBase62(this.bets[i].id, 1);\r\n          const amount = convToBase62(this.bets[i].amount, 4);\r\n          bets.push(`${position}${amount}`);\r\n          totalAmount += this.bets[i].amount;\r\n        }\r\n      }\r\n      \r\n      const reff = localStorage.getItem('GuangGame.Referral') || this.account.name;\r\n      const memo = `${this.game.id}-${reff}-${bets.join('')}-${this.game.hash}-${this.game.expired}-${this.game.sig}`\r\n      this.$chain.confirmBetTransaction(this.account, totalAmount, memo).pipe(\r\n        timeout(APPROVAL_WAITING_TIME),\r\n        tap(() => {\r\n          // 베팅 애니메이션 시작\r\n          this.beted = new Date().getTime();\r\n          this.playSoundEffect('popup');\r\n          this.aniPopup.show = true;\r\n          this.aniPopup.waitResult.show = true;\r\n          this.aniPopup.waitResult.img = 'show';\r\n          clearInterval(this.handleBetTimer);\r\n        }),\r\n        flatMap(trx => this.$chain.sendBetTransaction(trx))\r\n      ).subscribe(\r\n        result => {debugger\r\n          console.log(result);\r\n        },\r\n        err => {debugger\r\n          this.aniPopup.show = false;\r\n          this.aniPopup.waitResult.show = false;\r\n          this.aniPopup.waitResult.img = '';\r\n          if (err.name === 'TimeoutError') {debugger\r\n            this.showToast('transaction');\r\n          } else if (err.type === 'signature_rejected') {debugger\r\n            this.showToast('denied');\r\n          } else {debugger\r\n            this.showToast('wrong');\r\n          }\r\n\r\n          setTimeout(() => this.restartGame(), 3000);\r\n        }\r\n      );\r\n    },\r\n\r\n    /**\r\n     * 배팅 이밴트를 처리한다.\r\n     */\r\n    bet(info) {\r\n      if (this.validateBetState(info)) {\r\n        if (!this.isiOS()) {\r\n          this.playSoundEffect('bet');\r\n        }\r\n\r\n        if (info.tableType === 'pc') {\r\n          this.bet4Pc(info.id, info.x, info.y, this.selectedChip)\r\n        } else if (info.tableType === 'mobile') {\r\n          this.bet4Mobile(info.id, info.x, info.y, this.selectedChip)\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 배팅할 수 있는 상태인지 검사한다.\r\n     */\r\n    validateBetState(info) {\r\n      if (this.bets[info.id].amount > 0 && this.selectedChip === -1) {\r\n        this.cancelBet(info.id);\r\n        return false;\r\n      }\r\n\r\n      if (this.betCounter >= 5 && this.bets[info.id].amount === 0) {\r\n        this.showToast('maxbet');\r\n        return false;\r\n      }\r\n\r\n      const total = this.bets.reduce((total, bet) => total + bet.amount, 0);\r\n      if (total >= 50000000) {\r\n        this.showToast('maxbetmoney');\r\n        return false;\r\n      }\r\n\r\n      if ((this.bets[info.id].amount + CHIP_PRICE[this.selectedChip]) > 10000000) {\r\n        this.showToast('maxbetcell');\r\n        return false;\r\n      }\r\n      \r\n      if (this.state !== 'placing_bet') {\r\n        return false;\r\n      }\r\n\r\n      if (this.selectedChip < 0 || this.selectedChip > 8) {\r\n        this.showToast('selectchip');\r\n        return false;\r\n      }\r\n\r\n      if (info.id < 0 || info.id > 25) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * PC 게임 테이블을 위한 배팅 칩 애니메이션 제어\r\n     */\r\n    bet4Pc(id, x, y, selectedChip) {\r\n      let xPos = CAST_CHIP_SIZE * 0.5;\r\n      if (x < (window.innerWidth / 2)) {\r\n        xPos = ((window.innerWidth / 2) - x - (CAST_CHIP_SIZE * 0.5)) * -1;\r\n      } else if (x > (window.innerWidth / 2)) {\r\n        xPos = ((CAST_CHIP_SIZE * 0.75) + x - (window.innerWidth / 2));\r\n      }\r\n\r\n      let yPos = (this.gameTable.height - y + 68 + (CAST_CHIP_SIZE * 0.75)) * -1;\r\n      this.styleCastChips[selectedChip] = 'block';\r\n      this.styleCastChip = `z-index:0;transform:translateX(${xPos}px);top:${yPos}px;opacity: 1;transition:all .3s;`\r\n\r\n      if (this.bets[id].amount === 0) {\r\n        this.betCounter++;\r\n      }\r\n      this.bets[id].amount += CHIP_PRICE[selectedChip];\r\n      setTimeout(() => {\r\n        this.styleCastChips[selectedChip] = 'none';\r\n        this.styleCastChip = 'transition:all 0s;';\r\n      }, 300);\r\n    },\r\n\r\n    /**\r\n     * 모바일 게임 테이블을 위한 배팅 칩 애니메이션 제어\r\n     */\r\n    bet4Mobile(id, x, y, selectedChip) {\r\n      let xPos = CAST_CHIP_MOBILE_SIZE * 0.5;\r\n      if (x < (window.innerWidth / 2)) {\r\n        xPos = ((window.innerWidth / 2) - x - (CAST_CHIP_MOBILE_SIZE * 0.5)) * -1;\r\n      } else if (x > (window.innerWidth / 2)) {\r\n        xPos = ((CAST_CHIP_MOBILE_SIZE * 0.75) + x - (window.innerWidth / 2));\r\n      }\r\n\r\n      let yPos = (window.innerHeight - y + CAST_CHIP_MOBILE_SIZE) * -1;\r\n\r\n      if (this.chipTableMobile.position !== 'fixed') {\r\n        yPos += (280 - (this.$refs.layout.getBoundingClientRect().bottom - window.innerHeight));\r\n      }\r\n      this.styleCastChips[selectedChip] = 'block';\r\n      this.styleCastChip = `z-index:0;transform:translateX(${xPos}px);top:${yPos}px;opacity: 1;transition:all .3s;`\r\n\r\n      if (this.bets[id].amount === 0) {\r\n        this.betCounter++;\r\n      }\r\n      this.bets[id].amount += CHIP_PRICE[selectedChip];\r\n      setTimeout(() => {\r\n        this.styleCastChips[selectedChip] = 'none';\r\n        this.styleCastChip = 'transition:all 0s;';\r\n      }, 300);\r\n    },\r\n\r\n    /**\r\n     * 배팅을 취소한다.\r\n     */\r\n    cancelBet(id) {\r\n      this.bets[id].amount = 0;\r\n      this.betCounter--;\r\n    },\r\n   \r\n    /**\r\n     * 수신한 게임 결과를 처리한다.\r\n     */\r\n    revealed(data) {\r\n      this.aniPopup.waitResult.show = false;\r\n      this.aniPopup.waitResult.img = '';\r\n\r\n      this.handleRevealAni = setTimeout(() => {\r\n\r\n        this.openTong();\r\n        this.playSoundEffect('close-tong');\r\n\r\n        this.handleRevealAni = setTimeout(() => {\r\n          if (isGuang(data.game.cards[0])) {\r\n            this.playSoundEffect('guang');\r\n          } else {\r\n            this.playSoundEffect('spread-card');\r\n          }\r\n          this.$refs.gameTablePc.open1stCard(data.game.cards[0]);\r\n          this.$refs.gameTableMobile.open1stCard(data.game.cards[0]);\r\n\r\n          this.handleRevealAni = setTimeout(() => {\r\n            if (isGuang(data.game.cards[1])) {\r\n              this.playSoundEffect('guang');\r\n            } else {\r\n              this.playSoundEffect('spread-card');\r\n            }\r\n            this.$refs.gameTablePc.open2ndCard(data.game.cards[1]);\r\n            this.$refs.gameTableMobile.open2ndCard(data.game.cards[1]);\r\n\r\n            this.handleRevealAni = setTimeout(() => {\r\n              this.playRevealAni(data);\r\n              this.$chain.getBalance('taztokenbase', this.account.name, 'TAZCHIP').subscribe(\r\n                tazchipBalance => {\r\n                  if (tazchipBalance.length > 0) {\r\n                    const token = tazchipBalance[0].split(' ');\r\n                    this.setTazchipBalance(Number.parseFloat(token[0]));\r\n                  } else {\r\n                    this.setTazchipBalance(0);\r\n                  }\r\n                },\r\n                error => console.error(error)\r\n              );\r\n            }, 2500);\r\n          }, 2500);  \r\n        }, 1000);\r\n      }, 1000);\r\n    },\r\n\r\n    /**\r\n     * 결과 애니메이션을 실행한다.\r\n     */\r\n    playRevealAni(data) {\r\n      this.handleRevealAni = setTimeout(() => {\r\n        if (data.game.cards[0] < 10) {\r\n          this.aniPopup.result.card1 = `/img/sicbo/card/0${data.game.cards[0]}.svg`;\r\n        } else {\r\n          this.aniPopup.result.card1 = `/img/sicbo/card/${data.game.cards[0]}.svg`;\r\n        }\r\n\r\n        if (data.game.cards[1] < 10) {\r\n          this.aniPopup.result.card2 = `/img/sicbo/card/0${data.game.cards[1]}.svg`;\r\n        } else {\r\n          this.aniPopup.result.card2 = `/img/sicbo/card/${data.game.cards[1]}.svg`;\r\n        }\r\n\r\n        if (isPair(data.game.cards[0], data.game.cards[1])) {\r\n          this.aniPopup.result.result1 = 'Pair';\r\n          this.aniPopup.result.result2 = '';\r\n        } else {\r\n          if (isSmall(data.game.cards[0], data.game.cards[1])) {\r\n            this.aniPopup.result.result1 = 'Small';\r\n          } else {\r\n            this.aniPopup.result.result1 = 'Big';\r\n          }\r\n\r\n          if (isOdd(data.game.cards[0], data.game.cards[1])) {\r\n            this.aniPopup.result.result2 = 'Odd';\r\n          } else {\r\n            this.aniPopup.result.result2 = 'Even';\r\n          }\r\n        }\r\n\r\n        this.playSoundEffect('popup');\r\n        this.aniPopup.result.show = true;\r\n        this.handleRevealAni = setTimeout(() => {\r\n          this.aniPopup.result.show = false;\r\n          this.hits = getPositions(data.game.cards[0], data.game.cards[1]);\r\n          \r\n          this.initGame();\r\n          this.handleRevealAni = setTimeout(() => {\r\n            this.lastResult.cards = data.game.cards;\r\n            this.lastResult.pair = isPair(data.game.cards[0], data.game.cards[1]);\r\n            this.lastResult.small = isSmall(data.game.cards[0], data.game.cards[1]);\r\n            this.lastResult.odd = isOdd(data.game.cards[0], data.game.cards[1]);\r\n            this.hits = [];\r\n\r\n            this.pushBetHistory(data, 'myBets');\r\n            this.pushBetHistory(data, 'allBets');\r\n          }, 3000);\r\n          this.handleStartingAni = setTimeout(() => {\r\n            this.betTimer = BET_TIMER;\r\n            this.startGame();\r\n          }, 3000);\r\n        }, 2000);  \r\n      }, 1000);\r\n    },\r\n    \r\n    /**\r\n     * toast UI를 출력한다.\r\n     */\r\n    showToast(msg) {\r\n      this.isToast = true;\r\n      this.alertMsg = msg;\r\n\r\n      setTimeout(() => { this.isToast = false },1300)\r\n    },\r\n    \r\n    /**\r\n     * 배팅 히스토리를 화면에 고정하여 출력할 수 있는지 판단한다.\r\n     */\r\n    canDisplayBetHistory() {\r\n      const availableSpace = (window.innerWidth - this.gameTable.width)/2\r\n      this.alwaysOn = availableSpace > 246;\r\n    },\r\n\r\n    /**\r\n     * 게임 이력을 서버로부터 조회한다.\r\n     */\r\n    fetchHistoryData() {\r\n      if(this.account.name) {\r\n        fetch(`${this.$REST_API_SERVER}/api/v1/games?account=${this.account.name}`)\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            this.myBets = data;\r\n            if (data.length > 0) {\r\n            const lastBet = data[0];\r\n            this.lastResult = {\r\n              cards: [lastBet.card1, lastBet.card2],\r\n              pair: isPair(lastBet.card1, lastBet.card2),\r\n              small: isSmall(lastBet.card1, lastBet.card2),\r\n              odd: isOdd(lastBet.card1, lastBet.card2)\r\n            } \r\n          }  \r\n          })\r\n          .catch(err => console.error(err));\r\n      }\r\n      fetch(`${this.$REST_API_SERVER}/api/v1/games`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.allBets = data\r\n        })\r\n        .catch(err => console.error(err));\r\n    },\r\n\r\n    /**\r\n     * 카드번호에 해당하는 이미지 URI를 반환한다.\r\n     */\r\n    cardImg(cardNo) {\r\n      const fileNo = (cardNo < 10 ? '0' : '') + (cardNo);\r\n      return `/img/sicbo/card/${fileNo}.svg`\r\n    },\r\n    //\r\n    // bet history에 게임결과 출력 Pair / Big / Small\r\n    //\r\n    historyResult1(card1, card2) {\r\n      const cardA = Math.ceil((card1+1)/2);\r\n      const cardB = Math.ceil((card2+1)/2);\r\n      const result = (cardA + cardB) % 10;\r\n\r\n      if(cardA === cardB)\r\n        return 'Pair'\r\n\r\n      if(result > 4)\r\n        return 'Big'\r\n      else  \r\n        return 'Small'\r\n    },\r\n    //\r\n    // bet history에 게임결과 출력 Odd / Even\r\n    //\r\n    historyResult2(card1, card2) {\r\n      const cardA = Math.ceil((card1+1)/2);\r\n      const cardB = Math.ceil((card2+1)/2);\r\n\r\n      if(cardA === cardB) \r\n        return ''\r\n\r\n      const result = (cardA + cardB) % 2;\r\n      if(result === 1)\r\n        return 'Odd';\r\n      else  \r\n        return 'Even'\r\n    },\r\n    //\r\n    // 엄지 이미지 출력\r\n    //\r\n    thumbUrl(betdata) {\r\n      return (betdata.prize_total-betdata.bet_total > 0) ? '/img/sicbo/thumb-up.svg' : '/img/sicbo/thumb-down.png';\r\n    },\r\n    //\r\n    // 게임결과 reveal시, bet history에 추가\r\n    //\r\n    pushBetHistory(data, historyType) {\r\n      this[historyType].unshift({ \r\n        bet_total: data.game.bet_total,\r\n        prize_total: data.game.prize_total,\r\n        card1: data.game.cards[0],\r\n        card2: data.game.cards[1],\r\n        uid: data.game.uid,\r\n        reveal_trx: data.reveal.trx_id,\r\n        id: data.game.gid\r\n      });\r\n\r\n      if(this[historyType].length > 50) {\r\n        this[historyType] = this[historyType].splice(0, 50);\r\n      }\r\n    },\r\n    //\r\n    // 숫자 단위에 따른 양식\r\n    //\r\n    transNumber(betdata) {\r\n      if(betdata > 1000000)\r\n        return `${(betdata/1000000)}M`;\r\n      else if(betdata > 1000)\r\n        return `${(betdata/1000)}K`;\r\n      else\r\n        return `${betdata}`;\r\n    },\r\n    // \r\n    // 게임 상세정보 팝업을 닫는다.\r\n    //\r\n    closeHistoryDetail() {\r\n      this.showHistoryDetail = false;\r\n    },\r\n\r\n    /**\r\n     * 게임의 상세 정보를 팝업으로 출력한다.\r\n     */\r\n    showDetailPopup(bet) {\r\n      this.historyDetail = Object.assign({}, bet);\r\n      this.showHistoryDetail = true;\r\n    },\r\n\r\n    /**\r\n     * type에 따른 효과음을 플레이한다.\r\n     */\r\n    playSoundEffect(type) {\r\n      if (localStorage.getItem('GuangGame.effect') === 'on') {\r\n        const player = this.getEffectPlayer(type);\r\n        if (player) {\r\n          player.pause();\r\n          player.currentTime = 0;\r\n          player.play();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * type에 따라 다른 audio 객체를 반환한다.\r\n     */\r\n    getEffectPlayer(type) {\r\n      if (type === 'bet') {\r\n        const betPlayer = document.getElementById('sound-effect-bet');\r\n        return betPlayer;\r\n      }\r\n\r\n      const player = document.getElementById('sound-effect');\r\n      switch (type) {\r\n        case 'timer1':\r\n          player.src = '/music/timer2.wav';\r\n          break;\r\n        case 'timer2':\r\n          player.src = '/music/timer1.wav';\r\n          break;\r\n        case 'spread-card':\r\n          player.src = '/music/spread-card.wav';\r\n          break;\r\n        case 'close-tong':\r\n          player.src = '/music/close-tong.wav';\r\n          break;\r\n        case 'popup':\r\n          player.src = '/music/result-popup.wav';\r\n          break;\r\n        case 'clear':\r\n          player.src = '/music/disapper-chip.wav';\r\n          break;\r\n        case 'guang':\r\n          player.src = '/music/guang-appears.wav';\r\n          break;\r\n        default:\r\n          console.log('invalid sound file');\r\n          break;\r\n      }\r\n      return player;\r\n    },\r\n\r\n    /**\r\n     * iOS 인지 판단한다. (iOS에서는 배팅칩 효과음을 플레이하지 않는다.)\r\n     */\r\n    isiOS() {\r\n      return (navigator.userAgent.indexOf('iPad') !== -1) || (navigator.userAgent.indexOf('iPhone') !== -1);\r\n    },\r\n\r\n    /**\r\n     * 효과음 플레이어 객체를 초기화한다.\r\n     * 모바일에서는 사용자 터치에서 해당 플레이어를 초기화하지 않으면 사운드를 플레이할 수 없도록 보안설정이 되어있다.\r\n     */\r\n    initSound(){\r\n      if (!this.soundInitialized) {\r\n        const player = document.getElementById('sound-effect');\r\n        player.play();\r\n        player.pause();\r\n        const betPlayer = document.getElementById('sound-effect-bet');\r\n        betPlayer.play();\r\n        betPlayer.pause();\r\n        this.soundInitialized = true;\r\n      }\r\n    },\r\n    //\r\n    // bet history를 닫는다\r\n    //\r\n    cloesBetHistory() {\r\n      this.showHistoryRight = false;\r\n      this.showHistoryLeft = false;\r\n    },\r\n    //\r\n    // bet history가 닫히지 않도록 유지한다\r\n    //\r\n    showBetHistory(event) {\r\n      event.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * vues actions\r\n     */\r\n    ...mapMutations([\r\n      'setAppbarMode',\r\n      'setDrawerState',\r\n      'setDrawerMode',\r\n      'setTazchipBalance'\r\n    ]),\r\n    ...mapActions({\r\n      closeDrawer: 'closeDrawer'\r\n    })\r\n  },\r\n  \r\n  components: {\r\n    'g-pc-gametable': PcGameTable,\r\n    'g-mobile-gametable': MobileGameTable,\r\n    'swiper': swiper,\r\n    'swiper-slide': swiperSlide,\r\n    'g-footer': Footer,\r\n    'modal-history-detail': HistoryDetail\r\n  },\r\n\r\n  directives: {\r\n    resize,\r\n  }\r\n}\r\n",{"version":3,"sources":["Sicbo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Sicbo.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div id=\"sicbo\" ref=\"layout\" @click=\"initSound\">\r\n    <audio id=\"sound-effect\" preload=\"auto\">\r\n      <source src=\"/music/timer1.wav\"/>\r\n      <source src=\"/music/timer2.wav\"/>\r\n      <source src=\"/music/spread-card.wav\"/>\r\n      <source src=\"/music/close-tong.wav\"/>\r\n      <source src=\"/music/result-popup.wav\"/>\r\n      <source src=\"/music/disapper-chip.wav\"/>\r\n      <source src=\"/music/guang-appears.wav\"/>\r\n    </audio>\r\n    <audio id=\"sound-effect-bet\" preload=\"auto\">\r\n      <source src=\"/music/betting-chip.wav\" />\r\n    </audio>\r\n\r\n    <transition  name=\"ingame-toast\">\r\n      <div class =\"toast\" v-if=\"isToast\">\r\n        <img src=\"/img/sicbo/alert.svg\" alt=\"\" class=\"toast-img\">\r\n        <div class=\"toast-text\">{{$t(`sicbo.alert.${alertMsg}`)}}</div>\r\n      </div>\r\n    </transition>\r\n    <div class=\"game-table\" @mousemove=\"cloesBetHistory\">\r\n      <div class=\"bet-history-left-btn\"  :style=\"{ top: gameTable.height/2 + 'px' }\"  @mouseenter=\"showHistoryLeft = true\"  @mousemove=\"showBetHistory\">{{ $t('sicbo.history.my') }}</div>\r\n      <transition name=\"bet-to-right\">\r\n        <div class=\"bet-history-left\" :style=\"{ height: gameTable.height + 'px' }\" v-if=\"showHistoryLeft || alwaysOn\"  @mousemove=\"showBetHistory\">\r\n          <div class=\"history-title\">{{$t('sicbo.history.my')}}</div>\r\n          <hr class=\"history-division\">\r\n          <div class=\"history-list-container\" :style=\"{ height: gameTable.height-44 + 'px' }\">\r\n            <div v-for=\"(mybet, index) of myBets\" :key=\"index\" class=\"history-list-row\" @click=\"showDetailPopup(mybet)\">\r\n              <div class=\"history-card-wrap\">\r\n                <img :src=\"cardImg(mybet.card1)\" alt=\"\" class=\"history-card\">\r\n                <img :src=\"cardImg(mybet.card2)\" alt=\"\" class=\"history-card\">\r\n              </div>\r\n              <div class=\"history-text-wrap\">\r\n                <div class=\"history-text-row\">\r\n                  <span class=\"history-text-result\">{{ historyResult1(mybet.card1, mybet.card2) }}</span>\r\n                  <span class=\"history-text-result\">{{ historyResult2(mybet.card1, mybet.card2) }}</span>\r\n                </div>\r\n                <div class=\"history-text-row\">\r\n                  <span class=\"history-text-token\">{{ transNumber(mybet.bet_total) }}  TAZ Chip</span>\r\n                  <img :src=\"thumbUrl(mybet)\" alt=\"\" class=\"history-thumb\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n\r\n      <g-pc-gametable ref=\"gameTablePc\" style=\"z-index:-1;\" \r\n        :width=\"gameTable.width\"\r\n        :height=\"gameTable.height\"\r\n        :chipselected=\"selectedChip !== -1\"\r\n        :bets=\"bets\" \r\n        :lastresult=\"lastResult\"\r\n        :hits=\"hits\"\r\n        :isMyBetEmpty=\"isMyBetEmpty\"\r\n        v-show=\"!isMobile\" @bet=\"bet\" @cancel=\"cancelBet\" @mouseenter=\"closeShowHistory()\"/>\r\n      \r\n      <div class=\"bet-history-right-btn\" :class=\" {'no-rotate': rotateKrZh, 'extend-tr-btn': extendTrBet} \" :style=\"{ top: gameTable.height/2 + 'px' }\" @mouseenter=\"showHistoryRight = true\" @mousemove=\"showBetHistory\">{{$t('sicbo.history.past')}}</div>\r\n      <transition name=\"bet-to-left\">\r\n        <div class=\"bet-history-right\" :style=\"{ height: gameTable.height + 'px'}\" v-if=\"showHistoryRight || alwaysOn\" @mousemove=\"showBetHistory\">\r\n          <div class=\"history-title\">{{$t('sicbo.history.past')}}</div>\r\n          <hr class=\"history-division\">\r\n          <div class=\"history-list-container\" :style=\"{ height: gameTable.height-44 + 'px' }\">\r\n            <div v-for=\"(allbet, index) of allBets\" :key=\"index\" class=\"history-list-row-allbet\">\r\n              <div class=\"history-card-wrap\">\r\n                <img :src=\"cardImg(allbet.card1)\" alt=\"\" class=\"history-card\">\r\n                <img :src=\"cardImg(allbet.card2)\" alt=\"\" class=\"history-card\">\r\n              </div>\r\n              <div class=\"history-text-wrap\">\r\n                <div class=\"history-text-row\">\r\n                  <span class=\"history-text-result2\">{{ historyResult1(allbet.card1, allbet.card2) }}</span>\r\n                  <span class=\"history-text-result2\">{{ historyResult2(allbet.card1, allbet.card2) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n      \r\n    </div>\r\n\r\n    <!-- Chip table for PC -->\r\n    <div id=\"chip-table\" v-if=\"!isMobile\">\r\n      <div class=\"flex-wfill flex\"></div>\r\n      <!-- Button to swipe left -->\r\n      <div class=\"swiper-prev\" @click=\"slidePrevChip\">\r\n        <img src=\"/img/sicbo/ic-left-arrow.svg\" width=\"100%\"/>\r\n      </div>\r\n\r\n      <swiper ref=\"chipSwiper\" :options=\"swiperOption\" style=\"width:660px;height:102px;margin: auto 0px 0px 0px;padding-top:20px;\">\r\n        <swiper-slide>\r\n          <img :src=\"chipImage[0]\" :class=\"styleChip[0]\" @click=\"selectChip(0)\"/>\r\n        </swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[1]\" :class=\"styleChip[1]\" @click=\"selectChip(1)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[2]\" :class=\"styleChip[2]\" @click=\"selectChip(2)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[3]\" :class=\"styleChip[3]\" @click=\"selectChip(3)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[4]\" :class=\"styleChip[4]\" @click=\"selectChip(4)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[5]\" :class=\"styleChip[5]\" @click=\"selectChip(5)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[6]\" :class=\"styleChip[6]\" @click=\"selectChip(6)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[7]\" :class=\"styleChip[7]\" @click=\"selectChip(7)\"/></swiper-slide>\r\n        <swiper-slide><img :src=\"chipImage[8]\" :class=\"styleChip[8]\" @click=\"selectChip(8)\"/></swiper-slide>\r\n      </swiper>\r\n\r\n      <!-- Button to swipe right -->\r\n      <div class=\"swiper-next\" @click=\"slideNextChip\">\r\n        <img src=\"/img/sicbo/ic-right-arrow.svg\" width=\"100%\"/>\r\n      </div>\r\n\r\n      <!-- Button to bet to blockchain -->\r\n      <div class=\"flex-wfill flex flex-middle\" style=\"height: 100%;\">\r\n        <div class=\"btn-bet-pc\" @click=\"confirmBet\">\r\n          <div class=\"title\">{{$t('sicbo.betting.bet')}}</div>\r\n          <div class=\"value\">{{ $t('sicbo.betting.total')}}:</div>\r\n          <div class=\"value\">{{totalBetAmount}}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"cast-chip\" :style=\"styleCastChip\">\r\n        <img src=\"/img/sicbo/gamechip/chip_00.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[0]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_01.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[1]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_02.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[2]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_03.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[3]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_04.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[4]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_05.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[5]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_06.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[6]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_07.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[7]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_08.png\" class=\"cast-chip\" :style=\"`display:${styleCastChips[8]}`\"/>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Mobile -->\r\n    <keep-alive>\r\n      <div class=\"game-table\">\r\n        <g-mobile-gametable ref=\"gameTableMobile\"\r\n          :width=\"gameTable.width\"\r\n          :height=\"gameTable.height\"\r\n          :chipselected=\"selectedChip !== -1\"\r\n          :bets=\"bets\" \r\n          :lastresult=\"lastResult\"\r\n          :hits=\"hits\"\r\n          :allBets=\"allBets\"\r\n          :myBets=\"myBets\"\r\n          :isMyBetEmpty=\"isMyBetEmpty\"\r\n          v-show=\"isMobile\" @bet=\"bet\" @cancel=\"cancelBet\" @show-detail=\"showDetailPopup\" />\r\n      </div>\r\n    </keep-alive>\r\n    <div id=\"chip-table-mobile\" :style=\"styleMobileChipTable\" v-if=\"isMobile\">\r\n      <div style=\"height: 68px;\" v-show=\"chipTableMobile.position !== 'fixed'\">\r\n        <!-- fixed 모드가 아닐때 공간을 확보할 목적 -->\r\n      </div>\r\n      <div class=\"status-bar\">\r\n        <div style=\"margin-left: 16px;\">{{$t(`sicbo.status.${state}`)}}</div>\r\n        <div>{{tazchipBalance}} TAZ CHIP</div>\r\n        <div style=\"margin-right: 16px;\">{{$t('sicbo.status.timeleft')}} : {{timerString}} </div>\r\n      </div>\r\n      <div class=\"chip-bar\">\r\n        <div class=\"swiper-prev-mobile\" @click=\"slidePrevChip\">\r\n          <img src=\"/img/sicbo/ic-left-arrow.svg\" width=\"100%\"/>\r\n        </div>\r\n\r\n        <swiper ref=\"chipSwiper\" :options=\"swiperOptionMobile\" :style=\"`width:${mobileChipSwiperWidth}px;height:66px;padding-top:24px;`\">\r\n          <swiper-slide><img :src=\"chipImage[0]\" :class=\"styleChipMobile[0]\" @click=\"selectChip(0)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[1]\" :class=\"styleChipMobile[1]\" @click=\"selectChip(1)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[2]\" :class=\"styleChipMobile[2]\" @click=\"selectChip(2)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[3]\" :class=\"styleChipMobile[3]\" @click=\"selectChip(3)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[4]\" :class=\"styleChipMobile[4]\" @click=\"selectChip(4)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[5]\" :class=\"styleChipMobile[5]\" @click=\"selectChip(5)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[6]\" :class=\"styleChipMobile[6]\" @click=\"selectChip(6)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[7]\" :class=\"styleChipMobile[7]\" @click=\"selectChip(7)\"/></swiper-slide>\r\n          <swiper-slide><img :src=\"chipImage[8]\" :class=\"styleChipMobile[8]\" @click=\"selectChip(8)\"/></swiper-slide>\r\n        </swiper>\r\n\r\n        <div class=\"swiper-next-mobile\" @click=\"slideNextChip\">\r\n          <img src=\"/img/sicbo/ic-right-arrow.svg\" width=\"100%\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"cast-chip-mobile\" :style=\"styleCastChip\">\r\n        <img src=\"/img/sicbo/gamechip/chip_00.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[0]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_01.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[1]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_02.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[2]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_03.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[3]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_04.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[4]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_05.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[5]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_06.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[6]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_07.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[7]}`\"/>\r\n        <img src=\"/img/sicbo/gamechip/chip_08.png\" class=\"cast-chip-mobile\" :style=\"`display:${styleCastChips[8]}`\"/>\r\n      </div>\r\n      <div :class=\"`btn-bet-mobile ${classBtnBetMobile}`\" @click=\"confirmBet\">\r\n        <div class=\"title\">{{$t('sicbo.betting.bet')}}</div>\r\n        <div class=\"value\">{{ $t('sicbo.betting.totalmobile')}}: {{totalBetAmount}}</div>\r\n      </div>\r\n    </div>\r\n    <div style=\"height: 158px;\"  v-if=\"isMobile\" :game=\"historyDetail\">\r\n    </div>\r\n\r\n    <!-- footer -->\r\n    <g-footer />\r\n\r\n    <!-- Aninmation popup -->\r\n    <div id=\"ani-layout\" v-if=\"aniPopup.show\">\r\n      <div id=\"ani-start\" v-if=\"aniPopup.startToPlaceBet\">\r\n        <div class=\"box\"></div>\r\n        <div class=\"img-box\">\r\n          <img src=\"/img/sicbo/ani-flower.png\"/>\r\n        </div>\r\n        <p class=\"text\">{{ $t('sicbo.animation.start') }}</p>\r\n        <div class=\"box\"></div>\r\n      </div>\r\n\r\n      <div id=\"ani-wait-result\" v-if=\"aniPopup.waitResult.show\">\r\n        <div class=\"box\"></div>\r\n        <div :class=\"`flex flex-center img-box ${aniPopup.waitResult.img}`\">\r\n          <img src=\"/img/sicbo/ani-flower.png\"/>\r\n        </div>\r\n        <p class=\"text\">{{ $t('sicbo.animation.waiting') }}</p>\r\n        <div class=\"box\"></div>\r\n      </div>\r\n\r\n      <div id=\"ani-result\" v-if=\"aniPopup.result.show\">\r\n        <div class=\"box\"></div>\r\n        <div class=\"img-box\">\r\n          <img class=\"image\" :src=\"aniPopup.result.card1\">\r\n          <img class=\"image\" :src=\"aniPopup.result.card2\">\r\n          <div class=\"text\">{{aniPopup.result.result1}}</div>\r\n          <div class=\"text\">{{aniPopup.result.result2}}</div>\r\n        </div>\r\n        <div class=\"box\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <modal-history-detail @close=\"closeHistoryDetail\" v-if=\"showHistoryDetail\" :game=\"historyDetail\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations, mapActions } from 'vuex';\r\nimport { setTimeout, setInterval, clearInterval, clearTimeout } from 'timers';\r\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\r\nimport { flatMap, timeout, tap } from 'rxjs/operators';\r\nimport resize from 'vue-resize-directive';\r\nimport PcGameTable from '../components/sicbo/PcGameTable.vue';\r\nimport MobileGameTable from '../components/sicbo/MobileGameTable.vue';\r\nimport Footer from '../components/Footer.vue';\r\nimport HistoryDetail from '../components/sicbo/HistoryDetail.vue';\r\nimport convToBase62 from '../js/base62.js';\r\nimport {\r\n  // const\r\n  DEFAULT_WIDTH,\r\n  DEFAULT_HEIGHT,\r\n  ASPECT_RATIO,\r\n  CHIP_TBL_HEIGHT,\r\n  SICBO_MOBILE_WIDTH,\r\n  SICBO_MOBILE_HEIGHT,\r\n  BET_TIMER,\r\n  CAST_CHIP_SIZE,\r\n  CAST_CHIP_MOBILE_SIZE,\r\n  CHIP_PRICE,\r\n  APPROVAL_WAITING_TIME,\r\n\r\n  // Animaiton timmer\r\n  DELAY_CAST_CARD1,\r\n  DELAY_CAST_CARD2,\r\n  DELAY_CLOSE_TONG,\r\n  DELAY_STARTING_ANI,\r\n  DELAY_RESET_GAME,\r\n\r\n  // function\r\n  getPositions,\r\n  isPair,\r\n  isSmall,\r\n  isOdd,\r\n  isGuang\r\n} from '../js/sicbo.js';\r\nimport data from '../js/sicbo-data.js'\r\n\r\nexport default {\r\n\r\n  data,\r\n  props: {\r\n    isLangChanged: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  created() {\r\n\r\n    window.onscroll = () => {  // 브라우저의 스크롤 이벤트 리스너 등록\r\n      if (this.isMobile) {\r\n        this.onScrolled();\r\n      }\r\n    };\r\n\r\n    for (let i = 0; i < 26; i++) { // 배팅 데이터를 초기화\r\n      this.bets.push({id: i, amount: 0});\r\n    }\r\n\r\n    this.$ws.connectToPublicChannel(); // Websocket의 퍼블릭 채널에 연결\r\n    this.$ws.publicChannel.on('game-result', (data) => {  // 게임 결과 수신 리스너\r\n      if (this.account.name === data.game.uid) { // 유저 게임\r\n        if (this.game.id === data.game.gid) { // 현재 게임\r\n          const now = new Date().getTime();\r\n          \r\n          if ((now - this.beted) < 3000) {\r\n            setTimeout(() => {\r\n              this.revealed(data);\r\n            }, 3000 - (now - this.beted));        \r\n          } else {\r\n            this.revealed(data);\r\n          }\r\n        } else {\r\n          this.pushBetHistory(data, 'myBets');\r\n          this.pushBetHistory(data, 'allBets');\r\n        }\r\n      } else {\r\n        this.pushBetHistory(data, 'allBets');\r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   * 종료시 각종 핸드러를 초기화 한다.\r\n   */\r\n  destroyed() {\r\n    if (this.handleStartingAni) {\r\n      clearTimeout(this.handleStartingAni);\r\n    }\r\n    if (this.handleBetTimer) {\r\n      clearInterval(this.handleBetTimer);\r\n    }\r\n    if (this.handleRevealAni) {\r\n      clearTimeout(this.handleRevealAni);\r\n    }\r\n    window.onscroll = () => {}; // 브라우져 스크롤 이벤트 리스너 제거\r\n  },\r\n\r\n  /**\r\n   * 초기화\r\n   */\r\n  mounted() {\r\n    this.fetchHistoryData();  // 히스토리 데이터를 요청\r\n\r\n    this.$eventBus.$on('resize', () => this.onResize());  // resize 이벤트 리스너 등록\r\n    this.onResize();\r\n\r\n    // ui 상태 초기화\r\n    if (window.innerWidth < SICBO_MOBILE_WIDTH || window.innerHeight < SICBO_MOBILE_HEIGHT) {\r\n      this.setAppbarMode('mobile');\r\n    } else {\r\n      this.setAppbarMode('pc');\r\n    }\r\n    this.setDrawerMode('overlap');\r\n    this.setDrawerState('close-without-ani');\r\n\r\n    if (this.isLogin) {\r\n      this.startGame()\r\n    } else {\r\n      this.$eventBus.$on('login', () => this.startGame());\r\n    }\r\n\r\n    // this.$eventBus.$on('logout', () => this.stopGame());\r\n    if (!this.isLogin) {\r\n      this.setStatus('logout');\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      /**\r\n       * 게임 테이블이 보바일 모드인지 판단\r\n       */\r\n      isMobile(state) {\r\n        return state.common.appbarMode !== 'pc';\r\n      },\r\n      /**\r\n       * 로그인 상태인지 판단\r\n       */\r\n      isLogin(state) {\r\n        return state.common.account.name !== undefined;\r\n      },\r\n\r\n      /**\r\n       * Scatter에 로그인한 계정 정보\r\n       */\r\n      account(state) {\r\n        return state.common.account;\r\n      },\r\n\r\n      /**\r\n       * 로그인 된 사용자의 TAZ Chip 잔고\r\n       */\r\n      tazchipBalance(state) {\r\n        return state.common.balance.tazchip;\r\n      },\r\n\r\n      appbarHeight(state) {\r\n        return state.common.appbarMode !== 'pc' ? 68 : 60;\r\n      },\r\n    }),\r\n\r\n    /**\r\n     * 모바일 화면의 칩 swiper 폭\r\n     */\r\n    mobileChipSwiperWidth() {\r\n      return window.innerWidth - 36;\r\n    },\r\n\r\n    /**\r\n     * 모바일 화면의 칩 UI를 화면 스크롤에 따라 제어\r\n     */\r\n    styleMobileChipTable() {\r\n      if (this.chipTableMobile.position === 'fixed') {\r\n        return `position:fixed;height:${this.chipTableMobile.height}px;top:${window.innerHeight - this.chipTableMobile.height}px`\r\n      }\r\n      \r\n      return `position:absolute;height:${this.chipTableMobile.height}px;`\r\n    },\r\n\r\n    /**\r\n     * 모바일 화면에서 배팅 버튼의 위치를 제어\r\n     */\r\n    classBtnBetMobile() {\r\n      if (this.chipTableMobile.position === 'fixed') {\r\n        return 'fixed';\r\n      }\r\n      return '';\r\n    },\r\n\r\n    /**\r\n     * swiper를 제어하기 위한 객체를 반환\r\n     */\r\n    chipSwiper() {\r\n      return this.$refs.chipSwiper.swiper;\r\n    },\r\n\r\n    /**\r\n     * 총 배팅 액\r\n     */\r\n    totalBetAmount() {\r\n      const total = this.bets.reduce((total, bet) => total + bet.amount, 0);\r\n      return total;\r\n    },\r\n\r\n    rotateKrZh() {\r\n      const langchanged = this.isLangChanged;\r\n      const curLang = localStorage.getItem('GuangGame.Language')||langchanged;\r\n      \r\n      if(curLang === 'ko' || curLang === 'zh'){\r\n        return true;\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    },\r\n\r\n    extendTrBet() {\r\n      const langchanged = this.isLangChanged;\r\n      const curLang = localStorage.getItem('GuangGame.Language')||langchanged;\r\n      \r\n      if(curLang === 'tr') {\r\n        return true;\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n\r\n    isMyBetEmpty() {\r\n      return this.myBets.length > 0 ? false : true;\r\n    }\r\n\r\n  },\r\n\r\n  watch: {\r\n    isLogin: function (val) { // 로그인 상태가 변경되면 히스토리 데이터를 업데이트 한다.\r\n      this.fetchHistoryData();\r\n      if (!val) {\r\n        if (this.handleStartingAni) {\r\n          clearTimeout(this.handleStartingAni);\r\n        }\r\n        if (this.handleBetTimer) {\r\n          clearInterval(this.handleBetTimer);\r\n        }\r\n        if (this.handleRevealAni) {\r\n          clearTimeout(this.handleRevealAni);\r\n        }\r\n        this.aniPopup.show = false;\r\n        this.aniPopup.startToPlaceBet = false;\r\n        this.aniPopup.waitResult.show = false;\r\n        this.aniPopup.result.show = false;\r\n        this.myBets = [];\r\n        this.stopGame();\r\n        this.setStatus('logout');\r\n        this.lastResult.cards = [-1, -1]\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 게임 화면 크기 변경\r\n     */\r\n    onResize() {\r\n      if (!this.isMobile) {\r\n        let tableWidth = window.innerWidth;\r\n        const tableHeight = window.innerHeight - this.appbarHeight - (CHIP_TBL_HEIGHT + 10);\r\n\r\n        if ((tableWidth / tableHeight) < ASPECT_RATIO) {\r\n          this.gameTable.width = Math.round(tableWidth);\r\n          this.gameTable.height = Math.round(tableWidth * DEFAULT_HEIGHT / DEFAULT_WIDTH);\r\n        } else {\r\n          this.gameTable.height = Math.round(tableHeight);\r\n          this.gameTable.width = Math.round(tableHeight * DEFAULT_WIDTH / DEFAULT_HEIGHT);\r\n        }\r\n      } else {\r\n        this.onScrolled();\r\n      }\r\n      this.canDisplayBetHistory();\r\n    },\r\n    \r\n    /**\r\n     * 모바일 모드에서 화면 스크롤 상태에 따라 칩 UI의 위치 변경\r\n     */\r\n    onScrolled() {\r\n      if (window.innerHeight + 300 > this.$refs.layout.getBoundingClientRect().bottom) {\r\n        this.chipTableMobile.position = 'absolute';\r\n      } else {\r\n        this.chipTableMobile.position = 'fixed';\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 게임 시작\r\n     */\r\n    startGame() {\r\n      this.aniPopup.show = true;\r\n      this.setStatus('new_game');\r\n      \r\n      this.cast1stCard();\r\n\r\n      this.handleStartingAni = setTimeout(() => this.cast2ndCard(), DELAY_CAST_CARD1);\r\n    },\r\n\r\n    /**\r\n     * Game table wrappers\r\n     */\r\n    setStatus(status) {\r\n      this.state = status;\r\n      this.$refs.gameTablePc.setStatus(status);\r\n    },\r\n\r\n    /**\r\n     * 첫 번째 화투 투척 애니메이션\r\n     */\r\n    cast1stCard() {\r\n      this.$refs.gameTablePc.cast1stCard();\r\n      this.$refs.gameTableMobile.cast1stCard();\r\n      \r\n      setTimeout(() => {\r\n        this.playSoundEffect('spread-card');\r\n      }, 200);\r\n    },\r\n\r\n    /**\r\n     * 두 번째 화투 투척 애니메이션\r\n     */\r\n    cast2ndCard() {\r\n      this.$refs.gameTablePc.cast2ndCard();\r\n      this.$refs.gameTableMobile.cast2ndCard();\r\n      setTimeout(() => {\r\n        this.playSoundEffect('spread-card');\r\n      }, 200);\r\n\r\n      this.handleStartingAni = setTimeout(() => {\r\n        this.closeTong();\r\n      }, DELAY_CAST_CARD2);\r\n    },\r\n\r\n    /**\r\n     * 식보통 덮는 애니메이션\r\n     */\r\n    closeTong() {\r\n      this.$refs.gameTablePc.closeTong();\r\n      this.$refs.gameTableMobile.closeTong();\r\n      setTimeout(() => {\r\n        this.playSoundEffect('close-tong')\r\n      }, 500);\r\n\r\n      this.handleStartingAni = setTimeout(() => {\r\n        this.startToPlaceBet();\r\n      }, DELAY_CLOSE_TONG);\r\n    },\r\n\r\n    /**\r\n     * 배팅 시작\r\n     */\r\n    startToPlaceBet() {\r\n      this.playSoundEffect('popup');\r\n      this.aniPopup.show = true;\r\n      this.aniPopup.startToPlaceBet = true;\r\n\r\n      this.handleStartingAni = setTimeout(() => {\r\n        this.aniPopup.show = false;\r\n        this.aniPopup.startToPlaceBet = false;\r\n\r\n        if (!this.isLogin) {\r\n          return;\r\n        }\r\n\r\n        this.setTimerString(this.betTimer);\r\n        this.setStatus('placing_bet');\r\n\r\n        this.handleBetTimer = setInterval(() => {\r\n          if (this.betTimer <= 1) {\r\n            this.aniPopup.show = true;\r\n            this.restartGame();\r\n          } else {\r\n            if (this.betTimer <= 11) {\r\n              this.playSoundEffect('timer2');  \r\n            } else {\r\n              this.playSoundEffect('timer1');\r\n            }\r\n            \r\n            this.betTimer = this.betTimer - 1;\r\n            this.setTimerString(this.betTimer);\r\n          }\r\n        }, 1000); // 배팅 대기 시간 타이머\r\n      }, DELAY_STARTING_ANI);\r\n    },\r\n\r\n    /**\r\n     * 게임을 재시작 한다.\r\n     */\r\n    restartGame() {\r\n      this.setStatus('new_game');\r\n      if (this.handleBetTimer) {\r\n        clearInterval(this.handleBetTimer);\r\n        this.handleBetTimer = undefined;\r\n      }\r\n\r\n      this.setTimerString(-1);\r\n\r\n      this.openTong();\r\n      this.playSoundEffect('close-tong');\r\n\r\n      setTimeout(() => this.initGame(), DELAY_RESET_GAME);\r\n      \r\n      this.handleStartingAni = setTimeout(() => { // 새 게임 시작\r\n        this.betTimer = BET_TIMER;\r\n        this.startGame();\r\n      }, 3000);\r\n    },\r\n\r\n    /**\r\n     * 식보통을 여는 애니메이션\r\n     */\r\n    openTong() {\r\n      this.$refs.gameTablePc.openTong();\r\n      this.$refs.gameTableMobile.openTong();\r\n    },\r\n\r\n    /**\r\n     * 게임이 종료되었을 때 배팅 정보등을 초기화\r\n     */\r\n    initGame() {\r\n      for (let idx = 0; idx < this.bets.length; idx++) {\r\n        this.bets[idx].amount = 0;\r\n      }\r\n\r\n      this.playSoundEffect('clear');\r\n      \r\n      this.betCounter = 0;\r\n      this.setTimerString(-1);\r\n      this.selectedChip = -1;\r\n\r\n      for (let idx = 0; idx < this.styleChip.length; idx++) {\r\n        this.chipImage[idx] = `/img/sicbo/gamechip/chip_0${idx}.png`;\r\n        this.styleChip[idx] = \"chip\";\r\n        this.styleChipMobile[idx] = \"chip-mobile\";\r\n      }\r\n\r\n      this.$refs.gameTablePc.stopGame();\r\n      this.$refs.gameTableMobile.stopGame();\r\n    },\r\n\r\n    /**\r\n     * 게임 종료\r\n     */\r\n    stopGame() {\r\n      if (this.handleStartingAni) {\r\n        clearTimeout(this.handleStartingAni);\r\n      }\r\n      \r\n      if (this.handleBetTimer) {\r\n        clearInterval(this.handleBetTimer);\r\n        this.handleBetTimer = undefined;\r\n      }\r\n\r\n      this.initGame();\r\n    },\r\n\r\n    /**\r\n     * 남은 배팅 시간을 출력\r\n     */\r\n    setTimerString(betTimer) {\r\n      let timerString = `--:--`;\r\n      if (betTimer >= 0) {\r\n        const sec = (betTimer % 60 < 10) ? `0${betTimer % 60}` : `${betTimer % 60}`\r\n        timerString = `${Math.floor(betTimer / 60)}:${sec}`;\r\n      }\r\n\r\n      this.$refs.gameTablePc.setTimerString(timerString);\r\n      this.timerString = timerString;\r\n    },\r\n\r\n    /**\r\n     * 칩을 왼쪽으로 스크롤 \r\n     */\r\n    slidePrevChip() {\r\n      this.chipSwiper.slidePrev();\r\n    },\r\n\r\n    /**\r\n     * 칩을 오른쪽으로 스크롤\r\n     */\r\n    slideNextChip() {\r\n      this.chipSwiper.slideNext();\r\n    },\r\n\r\n    /**\r\n     * 칩 선택\r\n     */\r\n    selectChip(idx) {\r\n      if (!this.isiOS()) {\r\n        this.playSoundEffect('bet');\r\n      }\r\n      for (let i = 0; i < 9; i++) {\r\n        if (i != idx) {\r\n          this.chipImage[i] = `/img/sicbo/gamechip/chip_0${i}.png`;\r\n          this.styleChip[i] = 'chip';\r\n          this.styleChipMobile[i] = 'chip-mobile';\r\n        } else if (this.styleChip[i] === 'chip') {\r\n          this.selectedChip = i;\r\n          this.chipImage[i] = `/img/sicbo/gamechip/chip_0${i}_light.png`;\r\n          this.styleChip[i] = 'chip selected'\r\n          this.styleChipMobile[i] = 'chip-mobile selected';\r\n        } else {\r\n          this.chipImage[i] = `/img/sicbo/gamechip/chip_0${i}.png`;\r\n          this.selectedChip = -1;\r\n          this.styleChip[i] = 'chip'\r\n          this.styleChipMobile[i] = 'chip-mobile';\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * REST 서버에 새 게임 생성을 요청한다.\r\n     */\r\n    confirmBet() {\r\n      if (!this.isLogin) {\r\n        return;\r\n      }\r\n\r\n      if (this.state !== 'placing_bet') {\r\n        return;\r\n      }\r\n\r\n      // 베팅 유효성 검사\r\n      if (this.betCounter < 1) {\r\n        this.showToast('nochip')\r\n        return;\r\n      }\r\n\r\n      // 배팅 타이머를 종료한다.\r\n      if (this.handleBetTimer) {\r\n        clearInterval(this.handleBetTimer);\r\n        this.handleBetTimer = undefined;\r\n      }\r\n      this.betTimer = -1;\r\n      this.setTimerString(-1);\r\n      this.setStatus('wait_result');\r\n\r\n      this.aniPopup.show = true; // 사용자의 입력을 차단한다.\r\n\r\n      // 서버에 게임 정보 요청\r\n      fetch(`${this.$REST_API_SERVER}/api/v1/games`, {\r\n        \"method\": \"POST\",\r\n        \"headers\": {\r\n          \"content-type\": \"application/json\"\r\n        },\r\n        \"body\": JSON.stringify({\"account\": this.account.name})\r\n      })\r\n      .then(response => {\r\n        response.json().then(gameInfo => {\r\n          this.game = gameInfo;\r\n          this.sendBetTransaction();\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 배팅된 내용을 블록체인에 전송한다.\r\n     */\r\n    sendBetTransaction() {debugger\r\n      const bets = [];\r\n      let totalAmount = 0;\r\n      for (let i = 0; i < this.bets.length; i++) {\r\n        if (this.bets[i].amount > 0) {\r\n          const position = convToBase62(this.bets[i].id, 1);\r\n          const amount = convToBase62(this.bets[i].amount, 4);\r\n          bets.push(`${position}${amount}`);\r\n          totalAmount += this.bets[i].amount;\r\n        }\r\n      }\r\n      \r\n      const reff = localStorage.getItem('GuangGame.Referral') || this.account.name;\r\n      const memo = `${this.game.id}-${reff}-${bets.join('')}-${this.game.hash}-${this.game.expired}-${this.game.sig}`\r\n      this.$chain.confirmBetTransaction(this.account, totalAmount, memo).pipe(\r\n        timeout(APPROVAL_WAITING_TIME),\r\n        tap(() => {\r\n          // 베팅 애니메이션 시작\r\n          this.beted = new Date().getTime();\r\n          this.playSoundEffect('popup');\r\n          this.aniPopup.show = true;\r\n          this.aniPopup.waitResult.show = true;\r\n          this.aniPopup.waitResult.img = 'show';\r\n          clearInterval(this.handleBetTimer);\r\n        }),\r\n        flatMap(trx => this.$chain.sendBetTransaction(trx))\r\n      ).subscribe(\r\n        result => {debugger\r\n          console.log(result);\r\n        },\r\n        err => {debugger\r\n          this.aniPopup.show = false;\r\n          this.aniPopup.waitResult.show = false;\r\n          this.aniPopup.waitResult.img = '';\r\n          if (err.name === 'TimeoutError') {debugger\r\n            this.showToast('transaction');\r\n          } else if (err.type === 'signature_rejected') {debugger\r\n            this.showToast('denied');\r\n          } else {debugger\r\n            this.showToast('wrong');\r\n          }\r\n\r\n          setTimeout(() => this.restartGame(), 3000);\r\n        }\r\n      );\r\n    },\r\n\r\n    /**\r\n     * 배팅 이밴트를 처리한다.\r\n     */\r\n    bet(info) {\r\n      if (this.validateBetState(info)) {\r\n        if (!this.isiOS()) {\r\n          this.playSoundEffect('bet');\r\n        }\r\n\r\n        if (info.tableType === 'pc') {\r\n          this.bet4Pc(info.id, info.x, info.y, this.selectedChip)\r\n        } else if (info.tableType === 'mobile') {\r\n          this.bet4Mobile(info.id, info.x, info.y, this.selectedChip)\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 배팅할 수 있는 상태인지 검사한다.\r\n     */\r\n    validateBetState(info) {\r\n      if (this.bets[info.id].amount > 0 && this.selectedChip === -1) {\r\n        this.cancelBet(info.id);\r\n        return false;\r\n      }\r\n\r\n      if (this.betCounter >= 5 && this.bets[info.id].amount === 0) {\r\n        this.showToast('maxbet');\r\n        return false;\r\n      }\r\n\r\n      const total = this.bets.reduce((total, bet) => total + bet.amount, 0);\r\n      if (total >= 50000000) {\r\n        this.showToast('maxbetmoney');\r\n        return false;\r\n      }\r\n\r\n      if ((this.bets[info.id].amount + CHIP_PRICE[this.selectedChip]) > 10000000) {\r\n        this.showToast('maxbetcell');\r\n        return false;\r\n      }\r\n      \r\n      if (this.state !== 'placing_bet') {\r\n        return false;\r\n      }\r\n\r\n      if (this.selectedChip < 0 || this.selectedChip > 8) {\r\n        this.showToast('selectchip');\r\n        return false;\r\n      }\r\n\r\n      if (info.id < 0 || info.id > 25) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * PC 게임 테이블을 위한 배팅 칩 애니메이션 제어\r\n     */\r\n    bet4Pc(id, x, y, selectedChip) {\r\n      let xPos = CAST_CHIP_SIZE * 0.5;\r\n      if (x < (window.innerWidth / 2)) {\r\n        xPos = ((window.innerWidth / 2) - x - (CAST_CHIP_SIZE * 0.5)) * -1;\r\n      } else if (x > (window.innerWidth / 2)) {\r\n        xPos = ((CAST_CHIP_SIZE * 0.75) + x - (window.innerWidth / 2));\r\n      }\r\n\r\n      let yPos = (this.gameTable.height - y + 68 + (CAST_CHIP_SIZE * 0.75)) * -1;\r\n      this.styleCastChips[selectedChip] = 'block';\r\n      this.styleCastChip = `z-index:0;transform:translateX(${xPos}px);top:${yPos}px;opacity: 1;transition:all .3s;`\r\n\r\n      if (this.bets[id].amount === 0) {\r\n        this.betCounter++;\r\n      }\r\n      this.bets[id].amount += CHIP_PRICE[selectedChip];\r\n      setTimeout(() => {\r\n        this.styleCastChips[selectedChip] = 'none';\r\n        this.styleCastChip = 'transition:all 0s;';\r\n      }, 300);\r\n    },\r\n\r\n    /**\r\n     * 모바일 게임 테이블을 위한 배팅 칩 애니메이션 제어\r\n     */\r\n    bet4Mobile(id, x, y, selectedChip) {\r\n      let xPos = CAST_CHIP_MOBILE_SIZE * 0.5;\r\n      if (x < (window.innerWidth / 2)) {\r\n        xPos = ((window.innerWidth / 2) - x - (CAST_CHIP_MOBILE_SIZE * 0.5)) * -1;\r\n      } else if (x > (window.innerWidth / 2)) {\r\n        xPos = ((CAST_CHIP_MOBILE_SIZE * 0.75) + x - (window.innerWidth / 2));\r\n      }\r\n\r\n      let yPos = (window.innerHeight - y + CAST_CHIP_MOBILE_SIZE) * -1;\r\n\r\n      if (this.chipTableMobile.position !== 'fixed') {\r\n        yPos += (280 - (this.$refs.layout.getBoundingClientRect().bottom - window.innerHeight));\r\n      }\r\n      this.styleCastChips[selectedChip] = 'block';\r\n      this.styleCastChip = `z-index:0;transform:translateX(${xPos}px);top:${yPos}px;opacity: 1;transition:all .3s;`\r\n\r\n      if (this.bets[id].amount === 0) {\r\n        this.betCounter++;\r\n      }\r\n      this.bets[id].amount += CHIP_PRICE[selectedChip];\r\n      setTimeout(() => {\r\n        this.styleCastChips[selectedChip] = 'none';\r\n        this.styleCastChip = 'transition:all 0s;';\r\n      }, 300);\r\n    },\r\n\r\n    /**\r\n     * 배팅을 취소한다.\r\n     */\r\n    cancelBet(id) {\r\n      this.bets[id].amount = 0;\r\n      this.betCounter--;\r\n    },\r\n   \r\n    /**\r\n     * 수신한 게임 결과를 처리한다.\r\n     */\r\n    revealed(data) {\r\n      this.aniPopup.waitResult.show = false;\r\n      this.aniPopup.waitResult.img = '';\r\n\r\n      this.handleRevealAni = setTimeout(() => {\r\n\r\n        this.openTong();\r\n        this.playSoundEffect('close-tong');\r\n\r\n        this.handleRevealAni = setTimeout(() => {\r\n          if (isGuang(data.game.cards[0])) {\r\n            this.playSoundEffect('guang');\r\n          } else {\r\n            this.playSoundEffect('spread-card');\r\n          }\r\n          this.$refs.gameTablePc.open1stCard(data.game.cards[0]);\r\n          this.$refs.gameTableMobile.open1stCard(data.game.cards[0]);\r\n\r\n          this.handleRevealAni = setTimeout(() => {\r\n            if (isGuang(data.game.cards[1])) {\r\n              this.playSoundEffect('guang');\r\n            } else {\r\n              this.playSoundEffect('spread-card');\r\n            }\r\n            this.$refs.gameTablePc.open2ndCard(data.game.cards[1]);\r\n            this.$refs.gameTableMobile.open2ndCard(data.game.cards[1]);\r\n\r\n            this.handleRevealAni = setTimeout(() => {\r\n              this.playRevealAni(data);\r\n              this.$chain.getBalance('taztokenbase', this.account.name, 'TAZCHIP').subscribe(\r\n                tazchipBalance => {\r\n                  if (tazchipBalance.length > 0) {\r\n                    const token = tazchipBalance[0].split(' ');\r\n                    this.setTazchipBalance(Number.parseFloat(token[0]));\r\n                  } else {\r\n                    this.setTazchipBalance(0);\r\n                  }\r\n                },\r\n                error => console.error(error)\r\n              );\r\n            }, 2500);\r\n          }, 2500);  \r\n        }, 1000);\r\n      }, 1000);\r\n    },\r\n\r\n    /**\r\n     * 결과 애니메이션을 실행한다.\r\n     */\r\n    playRevealAni(data) {\r\n      this.handleRevealAni = setTimeout(() => {\r\n        if (data.game.cards[0] < 10) {\r\n          this.aniPopup.result.card1 = `/img/sicbo/card/0${data.game.cards[0]}.svg`;\r\n        } else {\r\n          this.aniPopup.result.card1 = `/img/sicbo/card/${data.game.cards[0]}.svg`;\r\n        }\r\n\r\n        if (data.game.cards[1] < 10) {\r\n          this.aniPopup.result.card2 = `/img/sicbo/card/0${data.game.cards[1]}.svg`;\r\n        } else {\r\n          this.aniPopup.result.card2 = `/img/sicbo/card/${data.game.cards[1]}.svg`;\r\n        }\r\n\r\n        if (isPair(data.game.cards[0], data.game.cards[1])) {\r\n          this.aniPopup.result.result1 = 'Pair';\r\n          this.aniPopup.result.result2 = '';\r\n        } else {\r\n          if (isSmall(data.game.cards[0], data.game.cards[1])) {\r\n            this.aniPopup.result.result1 = 'Small';\r\n          } else {\r\n            this.aniPopup.result.result1 = 'Big';\r\n          }\r\n\r\n          if (isOdd(data.game.cards[0], data.game.cards[1])) {\r\n            this.aniPopup.result.result2 = 'Odd';\r\n          } else {\r\n            this.aniPopup.result.result2 = 'Even';\r\n          }\r\n        }\r\n\r\n        this.playSoundEffect('popup');\r\n        this.aniPopup.result.show = true;\r\n        this.handleRevealAni = setTimeout(() => {\r\n          this.aniPopup.result.show = false;\r\n          this.hits = getPositions(data.game.cards[0], data.game.cards[1]);\r\n          \r\n          this.initGame();\r\n          this.handleRevealAni = setTimeout(() => {\r\n            this.lastResult.cards = data.game.cards;\r\n            this.lastResult.pair = isPair(data.game.cards[0], data.game.cards[1]);\r\n            this.lastResult.small = isSmall(data.game.cards[0], data.game.cards[1]);\r\n            this.lastResult.odd = isOdd(data.game.cards[0], data.game.cards[1]);\r\n            this.hits = [];\r\n\r\n            this.pushBetHistory(data, 'myBets');\r\n            this.pushBetHistory(data, 'allBets');\r\n          }, 3000);\r\n          this.handleStartingAni = setTimeout(() => {\r\n            this.betTimer = BET_TIMER;\r\n            this.startGame();\r\n          }, 3000);\r\n        }, 2000);  \r\n      }, 1000);\r\n    },\r\n    \r\n    /**\r\n     * toast UI를 출력한다.\r\n     */\r\n    showToast(msg) {\r\n      this.isToast = true;\r\n      this.alertMsg = msg;\r\n\r\n      setTimeout(() => { this.isToast = false },1300)\r\n    },\r\n    \r\n    /**\r\n     * 배팅 히스토리를 화면에 고정하여 출력할 수 있는지 판단한다.\r\n     */\r\n    canDisplayBetHistory() {\r\n      const availableSpace = (window.innerWidth - this.gameTable.width)/2\r\n      this.alwaysOn = availableSpace > 246;\r\n    },\r\n\r\n    /**\r\n     * 게임 이력을 서버로부터 조회한다.\r\n     */\r\n    fetchHistoryData() {\r\n      if(this.account.name) {\r\n        fetch(`${this.$REST_API_SERVER}/api/v1/games?account=${this.account.name}`)\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            this.myBets = data;\r\n            if (data.length > 0) {\r\n            const lastBet = data[0];\r\n            this.lastResult = {\r\n              cards: [lastBet.card1, lastBet.card2],\r\n              pair: isPair(lastBet.card1, lastBet.card2),\r\n              small: isSmall(lastBet.card1, lastBet.card2),\r\n              odd: isOdd(lastBet.card1, lastBet.card2)\r\n            } \r\n          }  \r\n          })\r\n          .catch(err => console.error(err));\r\n      }\r\n      fetch(`${this.$REST_API_SERVER}/api/v1/games`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.allBets = data\r\n        })\r\n        .catch(err => console.error(err));\r\n    },\r\n\r\n    /**\r\n     * 카드번호에 해당하는 이미지 URI를 반환한다.\r\n     */\r\n    cardImg(cardNo) {\r\n      const fileNo = (cardNo < 10 ? '0' : '') + (cardNo);\r\n      return `/img/sicbo/card/${fileNo}.svg`\r\n    },\r\n    //\r\n    // bet history에 게임결과 출력 Pair / Big / Small\r\n    //\r\n    historyResult1(card1, card2) {\r\n      const cardA = Math.ceil((card1+1)/2);\r\n      const cardB = Math.ceil((card2+1)/2);\r\n      const result = (cardA + cardB) % 10;\r\n\r\n      if(cardA === cardB)\r\n        return 'Pair'\r\n\r\n      if(result > 4)\r\n        return 'Big'\r\n      else  \r\n        return 'Small'\r\n    },\r\n    //\r\n    // bet history에 게임결과 출력 Odd / Even\r\n    //\r\n    historyResult2(card1, card2) {\r\n      const cardA = Math.ceil((card1+1)/2);\r\n      const cardB = Math.ceil((card2+1)/2);\r\n\r\n      if(cardA === cardB) \r\n        return ''\r\n\r\n      const result = (cardA + cardB) % 2;\r\n      if(result === 1)\r\n        return 'Odd';\r\n      else  \r\n        return 'Even'\r\n    },\r\n    //\r\n    // 엄지 이미지 출력\r\n    //\r\n    thumbUrl(betdata) {\r\n      return (betdata.prize_total-betdata.bet_total > 0) ? '/img/sicbo/thumb-up.svg' : '/img/sicbo/thumb-down.png';\r\n    },\r\n    //\r\n    // 게임결과 reveal시, bet history에 추가\r\n    //\r\n    pushBetHistory(data, historyType) {\r\n      this[historyType].unshift({ \r\n        bet_total: data.game.bet_total,\r\n        prize_total: data.game.prize_total,\r\n        card1: data.game.cards[0],\r\n        card2: data.game.cards[1],\r\n        uid: data.game.uid,\r\n        reveal_trx: data.reveal.trx_id,\r\n        id: data.game.gid\r\n      });\r\n\r\n      if(this[historyType].length > 50) {\r\n        this[historyType] = this[historyType].splice(0, 50);\r\n      }\r\n    },\r\n    //\r\n    // 숫자 단위에 따른 양식\r\n    //\r\n    transNumber(betdata) {\r\n      if(betdata > 1000000)\r\n        return `${(betdata/1000000)}M`;\r\n      else if(betdata > 1000)\r\n        return `${(betdata/1000)}K`;\r\n      else\r\n        return `${betdata}`;\r\n    },\r\n    // \r\n    // 게임 상세정보 팝업을 닫는다.\r\n    //\r\n    closeHistoryDetail() {\r\n      this.showHistoryDetail = false;\r\n    },\r\n\r\n    /**\r\n     * 게임의 상세 정보를 팝업으로 출력한다.\r\n     */\r\n    showDetailPopup(bet) {\r\n      this.historyDetail = Object.assign({}, bet);\r\n      this.showHistoryDetail = true;\r\n    },\r\n\r\n    /**\r\n     * type에 따른 효과음을 플레이한다.\r\n     */\r\n    playSoundEffect(type) {\r\n      if (localStorage.getItem('GuangGame.effect') === 'on') {\r\n        const player = this.getEffectPlayer(type);\r\n        if (player) {\r\n          player.pause();\r\n          player.currentTime = 0;\r\n          player.play();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * type에 따라 다른 audio 객체를 반환한다.\r\n     */\r\n    getEffectPlayer(type) {\r\n      if (type === 'bet') {\r\n        const betPlayer = document.getElementById('sound-effect-bet');\r\n        return betPlayer;\r\n      }\r\n\r\n      const player = document.getElementById('sound-effect');\r\n      switch (type) {\r\n        case 'timer1':\r\n          player.src = '/music/timer2.wav';\r\n          break;\r\n        case 'timer2':\r\n          player.src = '/music/timer1.wav';\r\n          break;\r\n        case 'spread-card':\r\n          player.src = '/music/spread-card.wav';\r\n          break;\r\n        case 'close-tong':\r\n          player.src = '/music/close-tong.wav';\r\n          break;\r\n        case 'popup':\r\n          player.src = '/music/result-popup.wav';\r\n          break;\r\n        case 'clear':\r\n          player.src = '/music/disapper-chip.wav';\r\n          break;\r\n        case 'guang':\r\n          player.src = '/music/guang-appears.wav';\r\n          break;\r\n        default:\r\n          console.log('invalid sound file');\r\n          break;\r\n      }\r\n      return player;\r\n    },\r\n\r\n    /**\r\n     * iOS 인지 판단한다. (iOS에서는 배팅칩 효과음을 플레이하지 않는다.)\r\n     */\r\n    isiOS() {\r\n      return (navigator.userAgent.indexOf('iPad') !== -1) || (navigator.userAgent.indexOf('iPhone') !== -1);\r\n    },\r\n\r\n    /**\r\n     * 효과음 플레이어 객체를 초기화한다.\r\n     * 모바일에서는 사용자 터치에서 해당 플레이어를 초기화하지 않으면 사운드를 플레이할 수 없도록 보안설정이 되어있다.\r\n     */\r\n    initSound(){\r\n      if (!this.soundInitialized) {\r\n        const player = document.getElementById('sound-effect');\r\n        player.play();\r\n        player.pause();\r\n        const betPlayer = document.getElementById('sound-effect-bet');\r\n        betPlayer.play();\r\n        betPlayer.pause();\r\n        this.soundInitialized = true;\r\n      }\r\n    },\r\n    //\r\n    // bet history를 닫는다\r\n    //\r\n    cloesBetHistory() {\r\n      this.showHistoryRight = false;\r\n      this.showHistoryLeft = false;\r\n    },\r\n    //\r\n    // bet history가 닫히지 않도록 유지한다\r\n    //\r\n    showBetHistory(event) {\r\n      event.stopPropagation();\r\n    },\r\n\r\n    /**\r\n     * vues actions\r\n     */\r\n    ...mapMutations([\r\n      'setAppbarMode',\r\n      'setDrawerState',\r\n      'setDrawerMode',\r\n      'setTazchipBalance'\r\n    ]),\r\n    ...mapActions({\r\n      closeDrawer: 'closeDrawer'\r\n    })\r\n  },\r\n  \r\n  components: {\r\n    'g-pc-gametable': PcGameTable,\r\n    'g-mobile-gametable': MobileGameTable,\r\n    'swiper': swiper,\r\n    'swiper-slide': swiperSlide,\r\n    'g-footer': Footer,\r\n    'modal-history-detail': HistoryDetail\r\n  },\r\n\r\n  directives: {\r\n    resize,\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../scss/flex.scss';\r\n@import \"../scss/fonts.scss\";\r\n@import \"../scss/variable.scss\";\r\n@import '~swiper/dist/css/swiper.css';\r\n\r\n.bet-history-btn{\r\n  display: none;\r\n  position: absolute;\r\n  background: #3C271B;\r\n  width: 48px;\r\n  height: 148px;\r\n  font-size: 24px;\r\n  color: #FEEAC6;\r\n  line-height: 48px;\r\n  text-align: center;\r\n  z-index: 3000;\r\n\r\n  @media( min-width: 1024px){\r\n    display: block\r\n  }\r\n\r\n  @media(max-height: 679px) {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.bet-history-left-btn{\r\n  @extend .bet-history-btn;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.6);\r\n  writing-mode: vertical-rl;\r\n  left: 0;\r\n}\r\n\r\n.bet-history-right-btn{\r\n  @extend .bet-history-btn;\r\n  writing-mode: vertical-rl;\r\n  box-shadow: 0 -3px 6px rgba(0, 0, 0, 0.6);\r\n  transform: rotate(180deg);\r\n  right:0;\r\n}\r\n\r\n.bet-to-left-enter-active, .bet-to-left-leave-active {\r\n  transition: all 0.4s ease-out;\r\n}\r\n\r\n.bet-to-left-enter, .bet-to-left-leave-to {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.bet-to-right-enter-active, .bet-to-right-leave-active {\r\n  transition: all 0.4s ease-out;\r\n}\r\n\r\n.bet-to-right-enter, .bet-to-right-leave-to {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.bet-history{\r\n  position: absolute;\r\n  background: #3C271B;\r\n  width: 246px;\r\n  margin-top: 68px;\r\n  z-index: 9999;\r\n\r\n  @media(max-height: 679px) {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.bet-history-left{\r\n  @extend .bet-history;\r\n  top: 0;\r\n  left: 0;\r\n  box-shadow: 5px 0px 10px rgba(0, 0, 0, 0.514);\r\n}\r\n\r\n.bet-history-right{\r\n  @extend .bet-history;\r\n  top:0;\r\n  right: 0;\r\n  box-shadow: -5px 0px 10px rgba(0, 0, 0, 0.514);\r\n}\r\n\r\n.history-title {\r\n  width: 246px;\r\n  height: 40px;\r\n  background: #291B13;\r\n  color: white;\r\n  font-size: 18px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n}\r\n\r\n.history-division {\r\n  margin: 0;\r\n  height: 4px;\r\n  background: #F7E2C0;\r\n}\r\n\r\n.history-list-container {\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; // IE에서 스크롤바 감춤\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none !important; // 윈도우 크롬 등\r\n  }\r\n}\r\n\r\n.history-list-row {\r\n  @extend .flex;\r\n  flex-wrap: wrap;\r\n  height: 68px;\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  color: white;\r\n  background: #3C271B;\r\n  cursor: pointer;\r\n\r\n  &:nth-child(2n) {\r\n    background: #291B13;\r\n  }\r\n\r\n  &:hover {\r\n    color: rgb(216, 216, 216);\r\n  }\r\n}\r\n\r\n.history-card-wrap {\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 47px;\r\n}\r\n\r\n.history-card {\r\n  width: 50%;\r\n  height: 100%;\r\n}\r\n\r\n.history-text-wrap {\r\n  display: inline-block;\r\n  margin-left: 11px;\r\n  height: 47px;\r\n}\r\n\r\n.history-text-row {\r\n  height: 24px;  \r\n\r\n  &:first-child {\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    display: flex;\r\n  }\r\n}\r\n\r\n.history-text-result {\r\n  display: inline-block;\r\n  font-size: 20px;\r\n\r\n  &:nth-child(1) {\r\n    width:78px;\r\n    margin-right: 16px\r\n  }\r\n}\r\n\r\n.history-text-result2 {\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  margin-top: 12px;\r\n\r\n  &:nth-child(1) {\r\n    width:78px;\r\n    margin-right: 16px\r\n  }\r\n}\r\n\r\n.history-text-token {\r\n  display: block;\r\n  width: 127px;\r\n  height: 100%;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.all-bet-id {\r\n  width: 100%;\r\n  height: 14px;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: #FFF389;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.history-list-row-allbet {\r\n  @extend .flex;\r\n  flex-wrap: wrap;\r\n  height: 68px;\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  color: white;\r\n  background: #3C271B;\r\n\r\n  &:nth-child(2n) {\r\n    background: #291B13;\r\n  }\r\n}\r\n\r\n.toast{\r\n  position: fixed;\r\n  background: white;\r\n  width: 324px;\r\n  height: 184px;\r\n  border-radius: 6px;\r\n  color: black;\r\n  top: 30%;\r\n  left: 50%;\r\n  margin-left: -162px;\r\n  z-index: 9999;\r\n\r\n  @media(min-width: 984px) {\r\n    width: 436px;\r\n    height: 184px;\r\n  }\r\n}\r\n\r\n.toast-img {\r\n  width: 98px;\r\n  height: 84px;\r\n  margin: 40px 113px 0;\r\n  @media(min-width: 984px) {\r\n    margin: 40px 169px 0;\r\n  }\r\n}\r\n\r\n.toast-text {\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 40px;\r\n}\r\n\r\n.ingame-toast-enter-active, .ingame-toast-leave-active {\r\n  transition: all .5s \r\n}\r\n\r\n.ingame-toast-enter, .ingame-toast-leave-to  {\r\n  opacity: 0;\r\n  transform: translateY(-50%)\r\n}\r\n\r\n#sicbo {\r\n  @extend .flex-wfill;\r\n  display: block;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #2C1106;\r\n}\r\n\r\n.game-table {\r\n  width: 100%;\r\n  background: linear-gradient(90deg, #4E4718 0%, #4A4417 5.38%, #5B531A 14.06%, #665D1C 29.4%, #6D631D 37.5%, #6F651D 45.83%, #6D631D 54.69%, #665D1C 64.06%, #5B531A 83.33%, #4A4417 94.79%, #4E4718 100%);\r\n}\r\n\r\n#chip-table {\r\n  position:relative;\r\n  width: 100%;\r\n  height: 112px;\r\n  background-image: url('/img/sicbo/gamechip/chip-floor.jpg');\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  z-index: 100;\r\n  align-items: flex-end!important;\r\n}\r\n\r\n#sicbo-footer {\r\n  min-height: 400px;\r\n  background: linear-gradient(180deg, #563008 0%, #2C1106 100%);\r\n}\r\n\r\n#sicbo-footer-mobile {\r\n  position: relative;\r\n  margin-top: 100px;\r\n  height: 200px;\r\n}\r\n\r\n#chip-table-mobile {\r\n  @extend .flex-column;\r\n  position:relative;\r\n  width: 100%;\r\n  z-index: 100;\r\n}\r\n\r\n.chip-bar {\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  @extend .flex-middle;\r\n  height: 66px;\r\n  margin-top: 0px;\r\n  background-image: url('/img/sicbo/gamechip/chip-floor.jpg');\r\n}\r\n.status-bar {\r\n  @extend .flex;\r\n  @extend .flex-middle;\r\n  justify-content: space-between!important;\r\n  height: 24px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  background: rgb(0, 0, 0);\r\n  color: #FFFFFF;\r\n}\r\n.swiper-prev-mobile {\r\n  width: 12px;\r\n  height: 46px;\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  @extend .flex-middle;\r\n}\r\n\r\n.swiper-next-mobile {\r\n  width: 12px;\r\n  height: 46px;\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  @extend .flex-middle;\r\n}\r\n\r\n.chip-mobile {\r\n  width: 46px;\r\n  height: 46px;\r\n  transition: transform .3s;\r\n  z-index: 10;\r\n  &.selected {\r\n    transform: translateY(-8px);\r\n  }\r\n}\r\n\r\n$cast-chip-mobile-size: 40px;\r\ndiv.cast-chip-mobile {\r\n  position: relative;\r\n  top: -50%;\r\n  width: $cast-chip-mobile-size;\r\n  height: $cast-chip-mobile-size;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  transition: ease;\r\n  opacity: 0;\r\n  z-index: -100;\r\n\r\n}\r\nimg.cast-chip-mobile {\r\n  position: absolute;\r\n  top: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n// PC Chip table\r\n.swiper-prev {\r\n  width: 24px;\r\n  height: 92px;\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  @extend .flex-middle;\r\n  margin-right: 8px;\r\n}\r\n\r\n.swiper-next {\r\n  width: 24px;\r\n  height: 92px;\r\n  @extend .flex;\r\n  @extend .flex-center;\r\n  @extend .flex-middle;\r\n  margin-left: 12px;\r\n}\r\n\r\n.chip {\r\n  width: 92px;\r\n  height: 92px;\r\n  transition: transform .3s;\r\n  z-index: 10;\r\n  &.selected {\r\n    transform: translateY(-14px);\r\n  }\r\n}\r\n\r\n$cast-chip-size: 80px;\r\ndiv.cast-chip {\r\n  position: relative;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: $cast-chip-size;\r\n  height: $cast-chip-size;\r\n  transform: translateX(50%);\r\n  transition: ease;\r\n  opacity: 0;\r\n  z-index: -100;\r\n}\r\nimg.cast-chip {\r\n  position: absolute;\r\n  top: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: none;\r\n}\r\n\r\n.btn-bet-pc {\r\n  width: 114px;\r\n  height: 94px;\r\n  margin-left: 12px;\r\n  margin-right: auto;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  background-image: url('/img/sicbo/bg-btn-bet-pc.svg');\r\n  background-size: cover;\r\n  cursor: pointer;\r\n  display: block;\r\n\r\n  &:active {\r\n    background-image: url('/img/sicbo/bg-btn-bet-pc-press.svg');\r\n  }\r\n\r\n  .title {\r\n    width: 100%;\r\n    height: 49px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 32px;\r\n    line-height: 42px;\r\n    color: #FFFFFF;\r\n    margin-top: 13px;\r\n    @extend .flex;\r\n    @extend .flex-middle;\r\n    @extend .flex-center;\r\n  }\r\n  .value {\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    color: #000000;\r\n    @extend .flex;\r\n    @extend .flex-middle;\r\n    @extend .flex-center;\r\n  }\r\n}\r\n\r\n.btn-bet-mobile {\r\n  position: absolute;\r\n  width: 120px;\r\n  height: 60px;\r\n  top: 4px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-image: url('/img/sicbo/bg-btn-bet-mobile.svg');\r\n  background-size: cover;\r\n  cursor: pointer;\r\n  display: block;\r\n\r\n  &:active {\r\n    background-image: url('/img/sicbo/bg-btn-bet-mobile-press.svg');\r\n  }\r\n\r\n  .title {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 35px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 30px;\r\n    line-height: 35px;\r\n    color: #FFFFFF;\r\n    margin-top: 4px;\r\n    @extend .flex;\r\n    @extend .flex-middle;\r\n    @extend .flex-center;\r\n  }\r\n  .value {\r\n    position: relative;\r\n    margin: auto 8px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    color: #000000;\r\n    @extend .flex;\r\n    @extend .flex-middle;\r\n    @extend .flex-center;\r\n  }\r\n}\r\n  .fixed {\r\n    top: - 68px;\r\n  }\r\n\r\n#ani-layout {\r\n  position: fixed;\r\n  top: 0%;\r\n  left: 0%;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1000;\r\n}\r\n\r\n@keyframes ain-start-txt {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  10% {\r\n    opacity: 1;\r\n  }\r\n  95% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes ani-start-box {\r\n  0% {\r\n    width: 0%;\r\n  }\r\n  10% {\r\n    opacity: 1;\r\n  }\r\n  20% {\r\n    width: 100%;\r\n  }\r\n  80% {\r\n    width: 100%;\r\n  }\r\n  95% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    width: 0%;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes ani-start-img {\r\n  0% {\r\n    transform: rotate( 0deg );\r\n  }\r\n  10% {\r\n    opacity: 1;\r\n  }\r\n  30% {\r\n    transform: rotate( 360deg );\r\n  }\r\n  35% {\r\n    transform: rotate( 360deg );\r\n  }\r\n  65% {\r\n    transform: rotate( 720deg );\r\n  }\r\n  70% {\r\n    transform: rotate( 720deg );\r\n  }\r\n  95% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: rotate( 1080deg );\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n#ani-start {\r\n  position: relative;\r\n  top: 20%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 360px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 1000px;\r\n  }\r\n\r\n  .text {\r\n    margin: 24px auto;\r\n    text-align: center;\r\n    color: orange;\r\n    font-weight: 600;\r\n    font-size: 32px;\r\n    word-spacing: 1rem;\r\n    opacity: 0;\r\n    animation-name: ain-start-txt;\r\n    animation-duration: 3s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-delay: 0.5s;\r\n    animation-iteration-count: 1;\r\n    animation-direction: alternate;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n    @media (min-width: 1024px) {\r\n      font-size: 42px;\r\n    }\r\n  }\r\n    \r\n  .box {\r\n    width: 100%;\r\n    height: 20px;\r\n    opacity: 0;\r\n    background: linear-gradient(to right, orangered, orange, orangered );\r\n    animation-name: ani-start-box;\r\n    animation-duration: 4s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-iteration-count: 1;\r\n    animation-direction: alternate;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n  }\r\n\r\n  .img-box {\r\n    @extend .flex;\r\n    @extend .flex-center;\r\n    height: 200px;\r\n\r\n    @media (min-width: 1024px) {\r\n      height: 300px;\r\n    }\r\n\r\n    img {\r\n      width: 30%;\r\n      object-fit: contain;\r\n      opacity: 0;\r\n      animation-name: ani-start-img;\r\n      animation-duration: 3s;\r\n      animation-timing-function: ease-in-out;\r\n      animation-delay: 0.5s;\r\n      animation-iteration-count: 1;\r\n      animation-direction: normal;\r\n      animation-fill-mode: none;\r\n      animation-play-state: running;\r\n\r\n      @media (min-width: 1024px) {\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes ain-wait-result-txt-1 {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes ain-wait-result-txt-2 {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes ani-wait-result-box-1 {\r\n  0% {\r\n    width: 0%;\r\n  }\r\n  10% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    width: 100%;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes ani-wait-result-box-2 {\r\n  0% {\r\n    width: 100%;\r\n  }\r\n  100% {\r\n    width: 0%;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes ani-wait-result-img {\r\n  0% {\r\n    transform: rotate( 0deg );\r\n  }\r\n  100% {\r\n    transform: rotate( 360deg );\r\n  }\r\n}\r\n\r\n#ani-wait-result {\r\n  position: relative;\r\n  top: 20%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(0, 0, 0, 0.7);\r\n  width: 360px;\r\n  @media (min-width: 1024px) {\r\n    width: 1000px;\r\n  }\r\n\r\n  .text {\r\n    margin: 24px auto;\r\n    text-align: center;\r\n    color: orange;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n    word-spacing: 1rem;\r\n    animation-name: ain-wait-result-txt-1;\r\n    animation-duration: 1.5s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-iteration-count: 1;\r\n    animation-direction: alternate;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n    @media (min-width: 1024px) {\r\n      font-size: 42px;\r\n    }\r\n  }\r\n    \r\n  .box {\r\n    width: 100%;\r\n    height: 20px;\r\n    background: linear-gradient(to right, orangered, orange, orangered );\r\n    animation-name: ani-wait-result-box-1;\r\n    animation-duration: 2s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-iteration-count: 1;\r\n    animation-direction: alternate;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n  }\r\n\r\n  .img-box {\r\n    @extend .flex;\r\n    @extend .flex-center;\r\n    height: 200px;\r\n    opacity: 0;\r\n    transition: opacity 2s;\r\n    transition-timing-function: ease-in-out;\r\n    transition-delay: 0.5s;\r\n\r\n    @media (min-width: 1024px) {\r\n      height: 300px;\r\n    }\r\n\r\n    &.show {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 30%;\r\n    object-fit: contain;\r\n    animation-name: ani-wait-result-img;\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-delay: 0.5s;\r\n    animation-iteration-count: infinite;\r\n    animation-direction: normal;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n\r\n    @media (min-width: 1024px) {\r\n      margin: 36px auto;\r\n      width: 20%;\r\n    }\r\n  }\r\n}\r\n\r\n#ani-result {\r\n  position: relative;\r\n  top: 20%;\r\n  left: 50%;\r\n  width: 360px;\r\n  transform: translateX(-50%);\r\n  background: rgba(0, 0, 0, 0.9);\r\n  @media (min-width: 1024px) {\r\n    width: 800px;\r\n  }\r\n\r\n  .text {\r\n    @extend .flex;\r\n    @extend .flex-center;\r\n    @extend .flex-middle;\r\n    margin: 24px auto;\r\n    text-align: center;\r\n    color: orange;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    word-spacing: 1rem;\r\n    opacity: 0;\r\n    animation-name: ain-start-txt;\r\n    animation-duration: 3s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-delay: 0.5s;\r\n    animation-iteration-count: 1;\r\n    animation-direction: alternate;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n    @media (min-width: 1024px) {\r\n      font-size: 64px;\r\n    }\r\n  }\r\n    \r\n  .box {\r\n    width: 100%;\r\n    height: 20px;\r\n    opacity: 0;\r\n    background: linear-gradient(to right, orangered, orange, orangered );\r\n    animation-name: ani-start-box;\r\n    animation-duration: 4s;\r\n    animation-timing-function: ease-in-out;\r\n    animation-iteration-count: 1;\r\n    animation-direction: alternate;\r\n    animation-fill-mode: none;\r\n    animation-play-state: running;\r\n  }\r\n\r\n  .img-box {\r\n    @extend .flex;\r\n    @extend .flex-center;\r\n    @extend .flex-middle;\r\n\r\n    height: 180px;\r\n\r\n    @media (min-width: 1024px) {\r\n      height: 300px;\r\n    }\r\n  }\r\n\r\n  img {\r\n    margin: 36px 16px;\r\n    width: 15%;\r\n  }\r\n}\r\n\r\n.no-rotate {\r\n  transform: none !important;\r\n}\r\n\r\n.extend-tr-btn {\r\n  height: 162px !important;\r\n}\r\n\r\n</style>\r\n"]}]}